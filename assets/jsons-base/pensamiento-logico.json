{
  "ejercicios": [
    {
      "id": 1,
      "titulo": "Jorgito y el Clima",
      "enunciado": "Jorgito es un programador principiante que debe decidir qué llevar cada día según el clima. Su objetivo es llegar seco y cómodo al trabajo, usando pensamiento lógico para combinar condiciones como lluvia, frío, calor y viento. En este juego, tú tomas las decisiones por él. Cada elección tiene consecuencias visuales y explicaciones claras sobre la lógica usada. ¡Acumula puntos y evita que Jorgito pase frío, calor o se moje!",
      "preguntas": [
        {
          "pregunta": "Jorgito mira por la ventana y ve que está lloviendo a cántaros. ¿Qué debe hacer antes de salir al trabajo?",
          "elecciones": ["Llevar paraguas", "Salir sin paraguas", "Llevar paraguas y botas de agua"],
          "consecuencias": {
            "Llevar paraguas": {
              "resultado": "Jorgito llega seco a su trabajo.",
              "feedback": "Animación: Jorgito camina feliz bajo la lluvia con su paraguas abierto. Mensaje: 'Usaste la premisa 'llueve' para tomar la acción correcta, como un condicional `if` bien aplicado.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Salir sin paraguas": {
              "resultado": "Jorgito llega empapado y resfriado.",
              "feedback": "Animación: Jorgito llega temblando y mojado. Mensaje: 'Ignoraste la condición principal ('llueve'), como un programa que no verifica entradas importantes.'",
              "puntuacion": -5,
              "siguiente_ronda": false,
              "reiniciar": true
            },
            "Llevar paraguas y botas de agua": {
              "resultado": "Jorgito llega seco, pero las botas eran innecesarias hoy.",
              "feedback": "Animación: Jorgito camina con paraguas y botas, pero el suelo no está inundado. Mensaje: 'Tu lógica es correcta, pero sobrecargaste la solución. En programación, evita añadir condiciones innecesarias.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Al día siguiente, el cielo está despejado y hace sol. ¿Qué debe hacer Jorgito?",
          "elecciones": ["Llevar paraguas por si acaso", "Salir sin paraguas", "Llevar gorra y bloqueador solar"],
          "consecuencias": {
            "Llevar paraguas por si acaso": {
              "resultado": "Jorgito carga el paraguas todo el día sin usarlo.",
              "feedback": "Animación: Jorgito suda bajo el sol, cargando el paraguas. Mensaje: 'Tu decisión es válida, pero no es óptima. En lógica, evita condiciones innecesarias.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            },
            "Salir sin paraguas": {
              "resultado": "Jorgito disfruta del día soleado sin cargar nada extra.",
              "feedback": "Animación: Jorgito camina relajado bajo el sol. Mensaje: 'Reconociste la negación de la premisa ('no llueve') y actuaste en consecuencia.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Llevar gorra y bloqueador solar": {
              "resultado": "Jorgito está fresco y protegido del sol.",
              "feedback": "Animación: Jorgito sonríe con gorra y bloqueador. Mensaje: 'Consideraste una premisa adicional ('hace sol') y optimizaste tu acción.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hoy está lloviendo y hace mucho frío. ¿Cómo debe prepararse Jorgito?",
          "elecciones": ["Llevar solo paraguas", "Llevar paraguas y abrigo", "Salir sin nada"],
          "consecuencias": {
            "Llevar solo paraguas": {
              "resultado": "Jorgito llega seco pero tiritando de frío.",
              "feedback": "Animación: Jorgito bajo el paraguas, con frío. Mensaje: 'Falta considerar la premisa 'hace frío'. En programación, cubre todos los casos relevantes.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Llevar paraguas y abrigo": {
              "resultado": "Jorgito llega seco y abrigado.",
              "feedback": "Animación: Jorgito camina cómodo con paraguas y bufanda. Mensaje: 'Usaste el operador 'Y' implícito: ambas condiciones se cumplen.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Salir sin nada": {
              "resultado": "Jorgito llega empapado y congelado.",
              "feedback": "Animación: Jorgito tose y tiembla. Mensaje: 'Ignorar premisas clave lleva a fallos graves.'",
              "puntuacion": -10,
              "siguiente_ronda": false,
              "reiniciar": true
            }
          }
        },
        {
          "pregunta": "El pronóstico dice: 'Posibilidad de lluvia y viento fuerte'. ¿Qué debe hacer Jorgito?",
          "elecciones": ["Llevar paraguas normal", "Llevar paraguas resistente y abrigo", "No llevar paraguas"],
          "consecuencias": {
            "Llevar paraguas normal": {
              "resultado": "El paraguas se voltea y Jorgito se moja.",
              "feedback": "Animación: El paraguas vuela. Mensaje: 'No consideraste la premisa 'viento fuerte'.'",
              "puntuacion": -5,
              "siguiente_ronda": false,
              "reiniciar": true
            },
            "Llevar paraguas resistente y abrigo": {
              "resultado": "Jorgito llega seco y protegido.",
              "feedback": "Animación: Jorgito camina firme con paraguas resistente. Mensaje: 'Combinaste múltiples premisas para una solución robusta.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "No llevar paraguas": {
              "resultado": "Jorgito llega empapado, pero sin perder el paraguas.",
              "feedback": "Animación: Jorgito mojado, pero con abrigo. Mensaje: 'Evitaste un riesgo, pero no resolviste el problema principal.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hoy no llueve, pero hay neblina y frío. ¿Qué debe hacer?",
          "elecciones": ["Llevar abrigo y gorra", "Llevar paraguas por la neblina", "Salir con ropa ligera"],
          "consecuencias": {
            "Llevar abrigo y gorra": {
              "resultado": "Jorgito está abrigado y visible.",
              "feedback": "Animación: Jorgito camina con abrigo y gorra. Mensaje: 'Adaptaste tu lógica a nuevas premisas.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Llevar paraguas por la neblina": {
              "resultado": "El paraguas no sirve y Jorgito tropieza.",
              "feedback": "Animación: Jorgito choca el paraguas. Mensaje: 'Herramienta incorrecta para la premisa.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Salir con ropa ligera": {
              "resultado": "Jorgito llega con frío y casi invisible.",
              "feedback": "Animación: Jorgito tiembla y es invisible. Mensaje: 'Ignoraste premisas críticas.'",
              "puntuacion": -10,
              "siguiente_ronda": false,
              "reiniciar": true
            }
          }
        },
        {
          "pregunta": "Está soleado, pero lloverá por la tarde. ¿Qué debe hacer?",
          "elecciones": ["Llevar paraguas plegable", "No llevar nada", "Llevar abrigo"],
          "consecuencias": {
            "Llevar paraguas plegable": {
              "resultado": "Jorgito usa el paraguas en la tarde y llega seco.",
              "feedback": "Animación: Jorgito abre el paraguas cuando llueve. Mensaje: 'Anticipaste cambios en las premisas.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "No llevar nada": {
              "resultado": "Jorgito se moja en la tarde.",
              "feedback": "Animación: Jorgito corre bajo la lluvia. Mensaje: 'No planificaste para cambios en las condiciones.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Llevar abrigo": {
              "resultado": "Jorgito no necesita el abrigo, pero lo carga.",
              "feedback": "Animación: Jorgito suda con el abrigo. Mensaje: 'Solución parcial. Prepárate para lo necesario.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hace calor extremo. ¿Qué debe hacer?",
          "elecciones": ["Llevar ropa ligera y agua", "Llevar paraguas para el sol", "Salir con abrigo"],
          "consecuencias": {
            "Llevar ropa ligera y agua": {
              "resultado": "Jorgito llega fresco y hidratado.",
              "feedback": "Animación: Jorgito bebe agua. Mensaje: 'Adaptaste tu lógica a la premisa 'calor extremo'.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Llevar paraguas para el sol": {
              "resultado": "Jorgito usa el paraguas como sombrilla.",
              "feedback": "Animación: Jorgito con paraguas abierto. Mensaje: 'Solución creativa.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Salir con abrigo": {
              "resultado": "Jorgito llega agotado por el calor.",
              "feedback": "Animación: Jorgito suda con el abrigo. Mensaje: 'Error de premisas: 'calor' y 'abrigo' son incompatibles.'",
              "puntuacion": -10,
              "siguiente_ronda": false,
              "reiniciar": true
            }
          }
        },
        {
          "pregunta": "Clima impredecible: sol, lluvia, viento y frío. ¿Cómo se prepara?",
          "elecciones": ["Llevar paraguas resistente, abrigo, gorra y agua", "Decidir sobre la marcha", "Quedarse en casa"],
          "consecuencias": {
            "Llevar paraguas resistente, abrigo, gorra y agua": {
              "resultado": "Jorgito está preparado para todo.",
              "feedback": "Animación: Jorgito usa cada item según el momento. Mensaje: 'Manejaste múltiples premisas cambiantes.'",
              "puntuacion": 30,
              "final": true
            },
            "Decidir sobre la marcha": {
              "resultado": "Jorgito llega mojado y con frío.",
              "feedback": "Animación: Jorgito corre desordenado. Mensaje: 'La improvisación sin planificación es riesgosa.'",
              "puntuacion": 0,
              "final": true
            },
            "Quedarse en casa": {
              "resultado": "Jorgito no va al trabajo.",
              "feedback": "Animación: Jorgito en pijama. Mensaje: 'Evitar el problema no es una solución.'",
              "puntuacion": -20,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 2,
      "titulo": "Ana y el Desayuno",
      "enunciado": "Ana debe decidir qué desayunar según lo que hay en la despensa. Combina los ingredientes disponibles para preparar el mejor desayuno posible. Usa pensamiento lógico para no desperdiciar comida y satisfacer su hambre.",
      "preguntas": [
        {
          "pregunta": "Ana abre la despensa y ve pan, mermelada y huevos. ¿Qué debe preparar?",
          "elecciones": ["Sándwich de mermelada", "Huevos revueltos con pan", "Solo pan tostado"],
          "consecuencias": {
            "Sándwich de mermelada": {
              "resultado": "Ana disfruta su sándwich.",
              "feedback": "Animación: Ana come un sándwich. Mensaje: 'Usaste los ingredientes disponibles de forma eficiente.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Huevos revueltos con pan": {
              "resultado": "Ana come un desayuno proteico y completo.",
              "feedback": "Animación: Ana sonríe con su plato. Mensaje: 'Combinaste dos premisas ('hay huevos' y 'hay pan') para una solución óptima.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Solo pan tostado": {
              "resultado": "Ana se queda con hambre.",
              "feedback": "Animación: Ana mira su plato con tristeza. Mensaje: 'No aprovechaste todos los recursos disponibles.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Ana encuentra fruta fresca y yogur. ¿Qué debe añadir a su desayuno?",
          "elecciones": ["Añadir fruta y yogur al sándwich", "Comer la fruta y yogur aparte", "Ignorar la fruta y el yogur"],
          "consecuencias": {
            "Añadir fruta y yogur al sándwich": {
              "resultado": "Ana tiene un desayuno balanceado.",
              "feedback": "Animación: Ana come un plato colorido. Mensaje: 'Integraste nuevas premisas ('fruta' y 'yogur') a tu solución.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Comer la fruta y yogur aparte": {
              "resultado": "Ana disfruta de ambos, pero por separado.",
              "feedback": "Animación: Ana come fruta y yogur en bowls. Mensaje: 'Solución válida, pero menos integrada.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Ignorar la fruta y el yogur": {
              "resultado": "Ana pierde nutrientes importantes.",
              "feedback": "Animación: La fruta y el yogur se echan a perder. Mensaje: 'Ignorar premisas disponibles es un error lógico.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Ana quiere café, pero solo hay té. ¿Qué debe hacer?",
          "elecciones": ["Tomar té", "Buscar café en otro lugar", "No tomar nada"],
          "consecuencias": {
            "Tomar té": {
              "resultado": "Ana disfruta su té y se adapta.",
              "feedback": "Animación: Ana bebe té con una sonrisa. Mensaje: 'Reaccionaste a la premisa 'no hay café' con una alternativa válida.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Buscar café en otro lugar": {
              "resultado": "Ana pierde tiempo y llega tarde.",
              "feedback": "Animación: Ana corre buscando café. Mensaje: 'A veces, aceptar las premisas disponibles es la mejor opción.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "No tomar nada": {
              "resultado": "Ana tiene sed y mal humor.",
              "feedback": "Animación: Ana frunce el ceño. Mensaje: 'No resolver una necesidad es como un programa con un caso no manejado.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Ana ve que el pan está duro. ¿Qué debe hacer?",
          "elecciones": ["Hacer tostadas", "Tirar el pan y comer solo huevos", "Ignorar el problema"],
          "consecuencias": {
            "Hacer tostadas": {
              "resultado": "Ana convierte el pan duro en algo delicioso.",
              "feedback": "Animación: Ana come tostadas crujientes. Mensaje: 'Transformaste una premisa negativa ('pan duro') en una solución positiva.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Tirar el pan y comer solo huevos": {
              "resultado": "Ana desperdicia comida.",
              "feedback": "Animación: El pan va a la basura. Mensaje: 'Desperdiciar recursos es como código ineficiente.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Ignorar el problema": {
              "resultado": "Ana se atraganta con el pan duro.",
              "feedback": "Animación: Ana tose. Mensaje: 'Ignorar problemas no los resuelve.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Ana tiene hambre pero solo hay atún y galletas. ¿Qué debe hacer?",
          "elecciones": ["Preparar atún con galletas", "Comer solo galletas", "No comer nada"],
          "consecuencias": {
            "Preparar atún con galletas": {
              "resultado": "Ana improvisa un desayuno salado.",
              "feedback": "Animación: Ana come atún con galletas. Mensaje: 'Usaste la creatividad para combinar premisas disponibles.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Comer solo galletas": {
              "resultado": "Ana se queda con hambre.",
              "feedback": "Animación: Ana mira su plato con hambre. Mensaje: 'No aprovechaste todos los recursos.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "No comer nada": {
              "resultado": "Ana se desmaya de hambre.",
              "feedback": "Animación: Ana se maree. Mensaje: 'No actuar ante premisas claras es un error crítico.'",
              "puntuacion": -20,
              "siguiente_ronda": false,
              "reiniciar": true
            }
          }
        },
        {
          "pregunta": "Ana encuentra chocolate y plátanos. ¿Cómo puede mejorar su desayuno?",
          "elecciones": ["Hacer un batido de plátano y chocolate", "Comerlos por separado", "Guardarlos para después"],
          "consecuencias": {
            "Hacer un batido de plátano y chocolate": {
              "resultado": "Ana disfruta de un desayuno delicioso y energético.",
              "feedback": "Animación: Ana bebe un batido con felicidad. Mensaje: 'Combinaste premisas para crear algo nuevo y mejor.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Comerlos por separado": {
              "resultado": "Ana come ambos, pero sin sinergia.",
              "feedback": "Animación: Ana come plátano y chocolate. Mensaje: 'Solución válida, pero menos innovadora.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Guardarlos para después": {
              "resultado": "Ana se queda con hambre ahora.",
              "feedback": "Animación: Ana guarda la comida. Mensaje: 'Posponer soluciones puede ser útil, pero no siempre.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Ana tiene prisa y solo 5 minutos para desayunar. ¿Qué debe hacer?",
          "elecciones": ["Comer una fruta y un yogur rápido", "Preparar huevos revueltos", "Saltarse el desayuno"],
          "consecuencias": {
            "Comer una fruta y un yogur rápido": {
              "resultado": "Ana desayuna rápido y nutritivo.",
              "feedback": "Animación: Ana come mientras corre. Mensaje: 'Optimizaste tu tiempo considerando la premisa 'prisa'.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Preparar huevos revueltos": {
              "resultado": "Ana llega tarde al trabajo.",
              "feedback": "Animación: Ana mira el reloj con estrés. Mensaje: 'No adaptaste tu solución al contexto temporal.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Saltarse el desayuno": {
              "resultado": "Ana tiene baja energía todo el día.",
              "feedback": "Animación: Ana se arrastra cansada. Mensaje: 'Ignorar necesidades básicas es como un programa sin manejo de errores.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Ana tiene todos los ingredientes: pan, huevos, fruta, yogur, café y té. ¿Qué desayuno ideal prepara?",
          "elecciones": ["Un desayuno completo con todo", "Solo café y tostadas", "Comer cualquier cosa rápido"],
          "consecuencias": {
            "Un desayuno completo con todo": {
              "resultado": "Ana tiene el mejor desayuno posible.",
              "feedback": "Animación: Ana sonríe con un plato lleno. Mensaje: 'Integraste todas las premisas disponibles para una solución óptima.'",
              "puntuacion": 30,
              "final": true
            },
            "Solo café y tostadas": {
              "resultado": "Ana desperdicia ingredientes.",
              "feedback": "Animación: Los ingredientes se echan a perder. Mensaje: 'No aprovechar recursos es ineficiente.'",
              "puntuacion": 5,
              "final": true
            },
            "Comer cualquier cosa rápido": {
              "resultado": "Ana come mal y se arrepiente.",
              "feedback": "Animación: Ana mira su plato con decepción. Mensaje: 'La prisa no justifica malas decisiones lógicas.'",
              "puntuacion": -10,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 3,
      "titulo": "El Semáforo Inteligente",
      "enunciado": "Programa un semáforo inteligente que reaccione a carros, peatones y bicicletas. Tu objetivo es evitar accidentes y optimizar el tráfico. Usa condiciones lógicas para decidir cuándo cambiar las luces.",
      "preguntas": [
        {
          "pregunta": "Hay carros esperando en la avenida principal y peatones en la esquina. ¿Qué debe hacer el semáforo?",
          "elecciones": ["Dar paso a los carros", "Dar paso a los peatones", "Alternar rápidamente"],
          "consecuencias": {
            "Dar paso a los carros": {
              "resultado": "Los carros avanzan, pero los peatones esperan.",
              "feedback": "Animación: Carros pasan, peatones esperan. Mensaje: 'Priorizaste una premisa ('carros esperando') sobre otra.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Dar paso a los peatones": {
              "resultado": "Los peatones cruzan seguros, pero los carros esperan.",
              "feedback": "Animación: Peatones cruzan, carros frenan. Mensaje: 'Priorizaste la seguridad peatonal, una premisa crítica.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Alternar rápidamente": {
              "resultado": "Confusión y casi accidentes.",
              "feedback": "Animación: Carros y peatones se detienen bruscamente. Mensaje: 'Cambios abruptos sin lógica clara generan caos.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Es de noche y no hay tráfico ni peatones. ¿Qué debe hacer el semáforo?",
          "elecciones": ["Mantener el ciclo normal", "Poner luz amarilla intermitente", "Apagarse"],
          "consecuencias": {
            "Mantener el ciclo normal": {
              "resultado": "El semáforo funciona innecesariamente.",
              "feedback": "Animación: Luces cambiando sin nadie. Mensaje: 'No optimizaste para la premisa 'no hay tráfico'.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            },
            "Poner luz amarilla intermitente": {
              "resultado": "Ahorro de energía y seguridad.",
              "feedback": "Animación: Luz amarilla parpadeando. Mensaje: 'Adaptaste la lógica a un contexto de bajas premisas.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Apagarse": {
              "resultado": "Pelgroso: los pocos carros no saben qué hacer.",
              "feedback": "Animación: Carros avanzan sin control. Mensaje: 'Ignorar la necesidad de señalización es un error.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hay una ambulancia acercándose con sirena encendida. ¿Qué debe hacer el semáforo?",
          "elecciones": ["Poner todas las luces en rojo y dar paso a la ambulancia", "Ignorar la ambulancia", "Cambiar a verde para la ambulancia"],
          "consecuencias": {
            "Poner todas las luces en rojo y dar paso a la ambulancia": {
              "resultado": "La ambulancia pasa rápida y segura.",
              "feedback": "Animación: Ambulancia pasa mientras todos se detienen. Mensaje: 'Priorizaste una premisa de emergencia correctamente.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Ignorar la ambulancia": {
              "resultado": "La ambulancia se queda atrapada en el tráfico.",
              "feedback": "Animación: Ambulancia espera con sirena. Mensaje: 'Ignorar premisas de emergencia tiene consecuencias graves.'",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Cambiar a verde para la ambulancia": {
              "resultado": "La ambulancia avanza, pero otros carros cruzan su camino.",
              "feedback": "Animación: Carros chocan casi con la ambulancia. Mensaje: 'Solución parcial; falta coordinación.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hay bicicletas y peatones esperando, pero no carros. ¿Qué debe hacer el semáforo?",
          "elecciones": ["Dar paso a peatones y bicicletas", "Dar paso solo a peatones", "Mantener el ciclo normal"],
          "consecuencias": {
            "Dar paso a peatones y bicicletas": {
              "resultado": "Todos cruzan seguros y rápidos.",
              "feedback": "Animación: Peatones y bicicletas avanzan. Mensaje: 'Integraste dos premisas ('peatones' y 'bicicletas') para una solución eficiente.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Dar paso solo a peatones": {
              "resultado": "Las bicicletas esperan innecesariamente.",
              "feedback": "Animación: Bicicletas frenan. Mensaje: 'No consideraste todas las premisas relevantes.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Mantener el ciclo normal": {
              "resultado": "Bicicletas y peatones esperan sin motivo.",
              "feedback": "Animación: Todos esperan. Mensaje: 'No adaptaste la lógica al contexto actual.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El semáforo detecta un accidente en la intersección. ¿Qué debe hacer?",
          "elecciones": ["Poner todas las luces en rojo", "Mantener el ciclo normal", "Apagarse"],
          "consecuencias": {
            "Poner todas las luces en rojo": {
              "resultado": "Todos se detienen y el accidente no empeora.",
              "feedback": "Animación: Carros y peatones frenan. Mensaje: 'Reaccionaste a una premisa crítica ('accidente') con una solución segura.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Mantener el ciclo normal": {
              "resultado": "Más carros chocan en el accidente.",
              "feedback": "Animación: Choque múltiple. Mensaje: 'Ignorar premisas de seguridad es un error grave.'",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Apagarse": {
              "resultado": "Caos total en la intersección.",
              "feedback": "Animación: Carros chocan. Mensaje: 'La falta de señalización en emergencias es peligrosa.'",
              "puntuacion": -25,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hay mucho tráfico en todas direcciones. ¿Cómo optimizar el semáforo?",
          "elecciones": ["Aumentar el tiempo de cada luz", "Alternar más rápido", "Dar prioridad a la avenida principal"],
          "consecuencias": {
            "Aumentar el tiempo de cada luz": {
              "resultado": "El tráfico fluye mejor, pero los peatones esperan más.",
              "feedback": "Animación: Carros avanzan lentos pero seguros. Mensaje: 'Equilibraste múltiples premisas ('tráfico' y 'seguridad').'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Alternar más rápido": {
              "resultado": "Confusión y casi accidentes.",
              "feedback": "Animación: Carros frenan bruscamente. Mensaje: 'Cambios rápidos sin lógica generan ineficiencia.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Dar prioridad a la avenida principal": {
              "resultado": "La avenida principal fluye, pero las otras se congestionan.",
              "feedback": "Animación: Una calle vacía, otras llenas. Mensaje: 'Priorizaste una premisa sobre otras sin balance.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El semáforo detecta que un peatón con discapacidad visual está esperando. ¿Qué debe hacer?",
          "elecciones": ["Activar señal sonora para peatones", "Mantener el ciclo normal", "Dar paso solo a carros"],
          "consecuencias": {
            "Activar señal sonora para peatones": {
              "resultado": "El peatón cruza seguro.",
              "feedback": "Animación: Peatón cruza con confianza. Mensaje: 'Adaptaste la lógica a una premisa de accesibilidad.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Mantener el ciclo normal": {
              "resultado": "El peatón no cruza y se frustra.",
              "feedback": "Animación: Peatón espera con bastón. Mensaje: 'No consideraste una premisa de inclusión.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Dar paso solo a carros": {
              "resultado": "El peatón no puede cruzar.",
              "feedback": "Animación: Peatón se queda en la acera. Mensaje: 'Ignorar necesidades específicas es un error lógico y ético.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Es hora pico: tráfico intenso, peatones y bicicletas. ¿Cómo manejar el semáforo?",
          "elecciones": ["Usar un algoritmo adaptativo que priorice según la demanda", "Mantener tiempos fijos", "Dar paso solo a carros"],
          "consecuencias": {
            "Usar un algoritmo adaptativo que priorice según la demanda": {
              "resultado": "El tráfico fluye de manera óptima para todos.",
              "feedback": "Animación: Todos avanzan en armonía. Mensaje: 'Integraste múltiples premisas dinámicas para una solución inteligente.'",
              "puntuacion": 30,
              "final": true
            },
            "Mantener tiempos fijos": {
              "resultado": "Congestión en todas direcciones.",
              "feedback": "Animación: Todos esperan frustrados. Mensaje: 'No adaptarte a premisas cambiantes genera ineficiencia.'",
              "puntuacion": 0,
              "final": true
            },
            "Dar paso solo a carros": {
              "resultado": "Peatones y bicicletas se acumulan peligrosamente.",
              "feedback": "Animación: Peatones y bicicletas amontonados. Mensaje: 'Priorizar una premisa sobre todas las demás es injusto y peligroso.'",
              "puntuacion": -20,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 4,
      "titulo": "El Detective de las Premisas",
      "enunciado": "Eres un detective resolviendo un misterio. Combina las pistas (premisas) para encontrar al culpable. Cada pista es una condición lógica que te acerca o aleja de la solución. ¡Usa tu pensamiento lógico para resolver el caso!",
      "preguntas": [
        {
          "pregunta": "Encuentras huellas grandes y un sombrero de copa en la escena del crimen. ¿Qué puedes deducir?",
          "elecciones": ["El culpable es alto y elegante", "El culpable es bajo y desaliñado", "No hay suficiente información"],
          "consecuencias": {
            "El culpable es alto y elegante": {
              "resultado": "Primera deducción correcta.",
              "feedback": "Animación: Silueta de un hombre alto con sombrero. Mensaje: 'Combinaste dos premisas ('huellas grandes' y 'sombrero de copa') para una conclusión lógica.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "El culpable es bajo y desaliñado": {
              "resultado": "Conclusión incorrecta.",
              "feedback": "Animación: Silueta de un hombre bajo. Mensaje: 'Tus premisas no apoyan esta conclusión. Revisa la lógica.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "No hay suficiente información": {
              "resultado": "Pierdes tiempo sin avanzar.",
              "feedback": "Animación: Reloj girando. Mensaje: 'Aunque es prudente, en lógica debes trabajar con las premisas disponibles.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un testigo dice que vio a un hombre con bigote y bastón. ¿Cómo afecta esto a tu deducción?",
          "elecciones": ["El culpable es alto, elegante, con bigote y bastón", "El testigo miente", "El bigote y el bastón son irrelevantes"],
          "consecuencias": {
            "El culpable es alto, elegante, con bigote y bastón": {
              "resultado": "Añades detalles importantes a tu perfil.",
              "feedback": "Animación: Silueta con bigote y bastón. Mensaje: 'Integraste una nueva premisa ('testigo') a tu conclusión.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "El testigo miente": {
              "resultado": "Pierdes una pista valiosa.",
              "feedback": "Animación: Testigo se encoge de hombros. Mensaje: 'Descartar premisas sin evidencia es un error lógico.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "El bigote y el bastón son irrelevantes": {
              "resultado": "Ignoras información útil.",
              "feedback": "Animación: Pistas se desvanecen. Mensaje: 'Todas las premisas son relevantes hasta que se demuestre lo contrario.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Encuentras un perfume caro en la escena. ¿Qué deduces?",
          "elecciones": ["El culpable es una mujer elegante", "El culpable es un hombre que usa perfume", "El perfume es una pista falsa"],
          "consecuencias": {
            "El culpable es una mujer elegante": {
              "resultado": "Nueva hipótesis, pero no necesariamente correcta.",
              "feedback": "Animación: Silueta de una mujer. Mensaje: 'Añadiste una premisa, pero cuidado con los estereotipos.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "El culpable es un hombre que usa perfume": {
              "resultado": "Conclusión más neutral y lógica.",
              "feedback": "Animación: Silueta de hombre con perfume. Mensaje: 'Evitaste sesgos y trabajaste con la premisa disponible.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "El perfume es una pista falsa": {
              "resultado": "Ignoras una premisa potencialmente útil.",
              "feedback": "Animación: Perfume se evapora. Mensaje: 'Descartar premisas sin análisis es riesgoso.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El informe forense dice que el culpable tiene alergia a los gatos. En la escena hay pelo de gato. ¿Qué significa?",
          "elecciones": ["El culpable no pudo estar aquí", "El culpable estuvo aquí a pesar de su alergia", "El pelo de gato es irrelevante"],
          "consecuencias": {
            "El culpable no pudo estar aquí": {
              "resultado": "Descarta sospechosos con alergia.",
              "feedback": "Animación: Lista de sospechosos se reduce. Mensaje: 'Usaste la premisa 'alergia' para filtrar posibilidades.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "El culpable estuvo aquí a pesar de su alergia": {
              "resultado": "Conclusión posible, pero menos probable.",
              "feedback": "Animación: Silueta estornudando. Mensaje: 'Forzaste una premisa. En lógica, busca la explicación más simple.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "El pelo de gato es irrelevante": {
              "resultado": "Pierdes una pista clave.",
              "feedback": "Animación: Pelo de gato brilla. Mensaje: 'Nunca ignores premisas sin analizar su impacto.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un sospechoso tiene huellas grandes, usa sombrero de copa, pero no tiene bigote ni bastón. ¿Es el culpable?",
          "elecciones": ["Sí, las premisas principales coinciden", "No, faltan detalles importantes", "Necesito más información"],
          "consecuencias": {
            "Sí, las premisas principales coinciden": {
              "resultado": "Arrestas al sospechoso, pero luego descubres que no es él.",
              "feedback": "Animación: Sospechoso inocente en prisión. Mensaje: 'Confiaste demasiado en premisas parciales. En lógica, verifica todo.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "No, faltan detalles importantes": {
              "resultado": "Evitas un error y sigues investigando.",
              "feedback": "Animación: Detectives siguen buscando. Mensaje: 'Reconociste que no todas las premisas coinciden. ¡Buen pensamiento crítico!'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Necesito más información": {
              "resultado": "Decisión prudente, pero el tiempo apremia.",
              "feedback": "Animación: Reloj girando rápido. Mensaje: 'En lógica, a veces hay que actuar con la información disponible.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Encuentras una carta firmada por el mayordomo confesando el crimen. ¿Qué haces?",
          "elecciones": ["Arrestar al mayordomo", "Verificar la autenticidad de la carta", "Ignorar la carta"],
          "consecuencias": {
            "Arrestar al mayordomo": {
              "resultado": "Cierras el caso, pero luego descubres que la carta era falsa.",
              "feedback": "Animación: Mayordomo inocente llorando. Mensaje: 'Aceptaste una premisa sin validarla. ¡Error crítico!'",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Verificar la autenticidad de la carta": {
              "resultado": "Descubres que la carta es falsa y sigues investigando.",
              "feedback": "Animación: Carta se quema revelando trampa. Mensaje: 'Validar premisas es esencial en el pensamiento lógico.'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Ignorar la carta": {
              "resultado": "Pierdes una pista, aunque sea falsa.",
              "feedback": "Animación: Carta se desvanece. Mensaje: 'Incluso las premisas falsas pueden llevar a pistas útiles.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Todas las pistas apuntan a la condesa, pero ella tiene una coartada sólida. ¿Qué concluyes?",
          "elecciones": ["La condesa es culpable y su coartada es falsa", "Alguien más está involucrado", "El caso no tiene solución"],
          "consecuencias": {
            "La condesa es culpable y su coartada es falsa": {
              "resultado": "Insistes en una teoría sin pruebas.",
              "feedback": "Animación: Condesa inocente. Mensaje: 'Forzar una conclusión sin evidencia es un error lógico.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Alguien más está involucrado": {
              "resultado": "Reevalúas las premisas y encuentras nuevas pistas.",
              "feedback": "Animación: Nueva silueta aparece. Mensaje: 'Reconociste que las premisas pueden apuntar a soluciones no obvias.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "El caso no tiene solución": {
              "resultado": "Abandonas la investigación.",
              "feedback": "Animación: Caso archivado. Mensaje: 'En lógica, siempre hay una solución si analizas bien las premisas.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Final: Todas las pistas apuntan al jardinero, quien tiene motivos, oportunidades y coincide con todas las premisas. ¿Qué haces?",
          "elecciones": ["Arrestar al jardinero", "Buscar una última pista por si acaso", "Dejar el caso en manos de otro detective"],
          "consecuencias": {
            "Arrestar al jardinero": {
              "resultado": "¡Caso resuelto! El jardinero confiesa.",
              "feedback": "Animación: Jardinero entre rejas. Mensaje: 'Integraste todas las premisas para una conclusión lógica y correcta.'",
              "puntuacion": 30,
              "final": true
            },
            "Buscar una última pista por si acaso": {
              "resultado": "Pierdes tiempo, pero confirmas la culpabilidad del jardinero.",
              "feedback": "Animación: Detectives celebran. Mensaje: 'La prudencia es buena, pero a veces la lógica ya tiene la respuesta.'",
              "puntuacion": 20,
              "final": true
            },
            "Dejar el caso en manos de otro detective": {
              "resultado": "El caso se resuelve, pero no gracias a ti.",
              "feedback": "Animación: Otro detective recibe el crédito. Mensaje: 'Confiar en otros sin agotar tu análisis es perder una oportunidad de aprendizaje.'",
              "puntuacion": 0,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 5,
      "titulo": "La Máquina de Café",
      "enunciado": "Programa una máquina de café para servir bebidas según los ingredientes disponibles. Usa condiciones lógicas para asegurarte de que los usuarios siempre reciban lo que piden, o una alternativa si algo falta.",
      "preguntas": [
        {
          "pregunta": "Un usuario pide un café con leche. La máquina tiene café y leche. ¿Qué debe hacer?",
          "elecciones": ["Servir café con leche", "Servir solo café", "Decir que no hay ingredientes"],
          "consecuencias": {
            "Servir café con leche": {
              "resultado": "Usuario feliz con su café con leche.",
              "feedback": "Animación: Café con leche siendo servido. Mensaje: 'Cumpliste con las premisas disponibles ('hay café' y 'hay leche').'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Servir solo café": {
              "resultado": "Usuario confundido, pero toma el café.",
              "feedback": "Animación: Café negro siendo servido. Mensaje: 'No aprovechaste todos los recursos ('hay leche').'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Decir que no hay ingredientes": {
              "resultado": "Usuario frustrado.",
              "feedback": "Animación: Usuario se va molesto. Mensaje: 'Ignoraste premisas disponibles. Error lógico.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un usuario pide un capuchino, pero no hay leche. ¿Qué debe hacer la máquina?",
          "elecciones": ["Servir café negro", "Decir que no hay leche", "Servir té como alternativa"],
          "consecuencias": {
            "Servir café negro": {
              "resultado": "Usuario acepta el café, pero prefiere capuchino.",
              "feedback": "Animación: Café negro servido. Mensaje: 'Adaptaste la solución a las premisas disponibles ('no hay leche').'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Decir que no hay leche": {
              "resultado": "Usuario elige otra opción.",
              "feedback": "Animación: Usuario piensa. Mensaje: 'Informar sobre premisas faltantes es útil, pero podrías ofrecer alternativas.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            },
            "Servir té como alternativa": {
              "resultado": "Usuario agradecido por la alternativa.",
              "feedback": "Animación: Té siendo servido. Mensaje: 'Ofreciste una solución creativa ante una premisa faltante.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un usuario pide un chocolate caliente. La máquina tiene chocolate y leche, pero no café. ¿Qué debe hacer?",
          "elecciones": ["Servir chocolate caliente", "Servir café negro", "Decir que no hay café"],
          "consecuencias": {
            "Servir chocolate caliente": {
              "resultado": "Usuario feliz con su chocolate.",
              "feedback": "Animación: Chocolate caliente servido. Mensaje: 'Usaste las premisas disponibles ('hay chocolate' y 'hay leche') para cumplir el pedido.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Servir café negro": {
              "resultado": "Usuario rechaza el café.",
              "feedback": "Animación: Usuario hace gesto de no. Mensaje: 'No cumpliste con la premisa principal ('pide chocolate').'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Decir que no hay café": {
              "resultado": "Usuario se confunde.",
              "feedback": "Animación: Usuario mira la máquina. Mensaje: 'Información irrelevante. Enfócate en lo que sí hay.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un usuario pide un té, pero la máquina no tiene té. ¿Qué debe hacer?",
          "elecciones": ["Servir café negro", "Servir agua caliente con limón", "Decir que no hay té"],
          "consecuencias": {
            "Servir café negro": {
              "resultado": "Usuario acepta, pero prefiere té.",
              "feedback": "Animación: Café servido. Mensaje: 'Solución parcial. Podrías buscar alternativas más cercanas.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Servir agua caliente con limón": {
              "resultado": "Usuario agradecido por la alternativa.",
              "feedback": "Animación: Agua con limón servida. Mensaje: 'Usaste recursos disponibles para ofrecer una alternativa lógica.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Decir que no hay té": {
              "resultado": "Usuario se va molesto.",
              "feedback": "Animación: Usuario se aleja. Mensaje: 'No ofrecer alternativas es un error de servicio y lógica.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "La máquina tiene café, leche y azúcar, pero un usuario pide un café sin azúcar. ¿Qué debe hacer?",
          "elecciones": ["Servir café con leche sin azúcar", "Servir café con leche y azúcar", "Preguntar si está seguro"],
          "consecuencias": {
            "Servir café con leche sin azúcar": {
              "resultado": "Usuario feliz con su café exacto.",
              "feedback": "Animación: Café sin azúcar servido. Mensaje: 'Cumpliste con la premisa específica ('sin azúcar').'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Servir café con leche y azúcar": {
              "resultado": "Usuario devuelve el café.",
              "feedback": "Animación: Usuario hace gesto de no. Mensaje: 'Ignoraste una premisa clave ('sin azúcar').'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Preguntar si está seguro": {
              "resultado": "Usuario se molesta por la demora.",
              "feedback": "Animación: Usuario impaciente. Mensaje: 'Cuestionar premisas claras puede ser contraproducente.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un usuario pide un café con leche desnatada, pero solo hay leche entera. ¿Qué debe hacer la máquina?",
          "elecciones": ["Servir café con leche entera", "Servir café negro", "Explicar que no hay leche desnatada"],
          "consecuencias": {
            "Servir café con leche entera": {
              "resultado": "Usuario acepta el café, pero prefiere desnatada.",
              "feedback": "Animación: Café con leche entera servido. Mensaje: 'Adaptaste la solución a las premisas disponibles ('leche entera').'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Servir café negro": {
              "resultado": "Usuario rechaza el café.",
              "feedback": "Animación: Usuario hace gesto de no. Mensaje: 'No aprovechaste los recursos disponibles ('leche entera').'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Explicar que no hay leche desnatada": {
              "resultado": "Usuario elige otra opción.",
              "feedback": "Animación: Usuario piensa. Mensaje: 'Informar es útil, pero ofrecer alternativas es mejor.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "La máquina está casi vacía: solo hay agua caliente y azúcar. Un usuario pide café. ¿Qué debe hacer?",
          "elecciones": ["Servir agua caliente con azúcar", "Decir que no hay café", "Intentar servir café igual"],
          "consecuencias": {
            "Servir agua caliente con azúcar": {
              "resultado": "Usuario acepta la alternativa.",
              "feedback": "Animación: Agua con azúcar servida. Mensaje: 'Ofreciste una solución creativa ante premisas limitadas.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Decir que no hay café": {
              "resultado": "Usuario se va molesto.",
              "feedback": "Animación: Usuario se aleja. Mensaje: 'No ofrecer alternativas es un error.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Intentar servir café igual": {
              "resultado": "La máquina se atasca.",
              "feedback": "Animación: Máquina hace ruido. Mensaje: 'Forzar una solución sin premisas es un error lógico y técnico.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "La máquina tiene todos los ingredientes y un usuario pide un café moca (café, chocolate y leche). ¿Qué debe hacer?",
          "elecciones": ["Servir café moca", "Servir café con leche", "Servir chocolate caliente"],
          "consecuencias": {
            "Servir café moca": {
              "resultado": "Usuario extasiado con su bebida.",
              "feedback": "Animación: Café moca servido. Mensaje: 'Integraste todas las premisas disponibles para una solución perfecta.'",
              "puntuacion": 20,
              "final": true
            },
            "Servir café con leche": {
              "resultado": "Usuario acepta, pero extraña el chocolate.",
              "feedback": "Animación: Café con leche servido. Mensaje: 'No aprovechaste todas las premisas disponibles ('hay chocolate').'",
              "puntuacion": 5,
              "final": true
            },
            "Servir chocolate caliente": {
              "resultado": "Usuario acepta, pero extraña el café.",
              "feedback": "Animación: Chocolate caliente servido. Mensaje: 'Priorizaste una premisa sobre otra sin necesidad.'",
              "puntuacion": 5,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 6,
      "titulo": "El Robot Recolector",
      "enunciado": "Programa un robot para recolectar frutas en un huerto. El robot debe identificar frutas maduras, evitar obstáculos y optimizar su batería. Usa bucles y condiciones para completar la tarea eficientemente.",
      "preguntas": [
        {
          "pregunta": "El robot ve una manzana madura en el árbol. ¿Qué debe hacer?",
          "elecciones": ["Recoger la manzana", "Ignorar la manzana", "Verificar si hay obstáculos"],
          "consecuencias": {
            "Recoger la manzana": {
              "resultado": "Manzana recolectada. 1/10.",
              "feedback": "Animación: Robot recoge manzana. Mensaje: 'Cumpliste con la premisa 'fruta madura'.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Ignorar la manzana": {
              "resultado": "Manzana se pudre en el árbol.",
              "feedback": "Animación: Manzana se cae podrida. Mensaje: 'Ignorar premisas claras es un error lógico.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Verificar si hay obstáculos": {
              "resultado": "El robot pierde tiempo, pero evita riesgos.",
              "feedback": "Animación: Robot escanea el área. Mensaje: 'La prudencia es buena, pero no debes ignorar la premisa principal.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El robot detecta una rama caída en el camino hacia otra manzana madura. ¿Qué debe hacer?",
          "elecciones": ["Saltar la rama", "Rodear la rama", "Intentar pasar por encima"],
          "consecuencias": {
            "Saltar la rama": {
              "resultado": "El robot salta con éxito y recoge la manzana.",
              "feedback": "Animación: Robot salta y recoge manzana. Mensaje: 'Superaste un obstáculo usando una acción alternativa.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Rodear la rama": {
              "resultado": "El robot tarda más, pero llega seguro.",
              "feedback": "Animación: Robot da la vuelta. Mensaje: 'Solución segura, pero menos eficiente.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Intentar pasar por encima": {
              "resultado": "El robot se cae y daña una manzana.",
              "feedback": "Animación: Robot tropieza. Mensaje: 'Ignorar obstáculos lleva a errores.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "La batería del robot está al 20%. Hay 3 manzanas maduras lejos. ¿Qué debe hacer?",
          "elecciones": ["Recoger las 3 manzanas y riesgo de quedarse sin batería", "Recoger solo 1 manzana cercana y recargar", "Ignorar las manzanas y recargar"],
          "consecuencias": {
            "Recoger las 3 manzanas y riesgo de quedarse sin batería": {
              "resultado": "El robot recoge 2 manzanas y se apaga.",
              "feedback": "Animación: Robot se detiene. Mensaje: 'Ambitioso, pero no optimizaste la premisa 'batería baja'.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Recoger solo 1 manzana cercana y recargar": {
              "resultado": "El robot recoge 1 manzana y se recarga.",
              "feedback": "Animación: Robot recarga. Mensaje: 'Priorizaste la premisa 'batería baja' sobre la ambición.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Ignorar las manzanas y recargar": {
              "resultado": "El robot se recarga, pero pierde tiempo.",
              "feedback": "Animación: Robot en la base. Mensaje: 'Seguro, pero no productivo.'",
              "puntuacion": 0,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El robot ve una manzana podrida y una madura juntas. ¿Qué debe hacer?",
          "elecciones": ["Recoger solo la manzana madura", "Recoger ambas", "Ignorar ambas"],
          "consecuencias": {
            "Recoger solo la manzana madura": {
              "resultado": "Manzana madura recolectada.",
              "feedback": "Animación: Robot recoge manzana madura. Mensaje: 'Filtraste la premisa relevante ('madura').'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Recoger ambas": {
              "resultado": "El robot contamina la manzana buena con la podrida.",
              "feedback": "Animación: Manzanas mezcladas. Mensaje: 'No distinguiste entre premisas útiles y dañinas.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Ignorar ambas": {
              "resultado": "Pierde dos manzanas.",
              "feedback": "Animación: Manzanas en el árbol. Mensaje: 'Ignorar oportunidades es ineficiente.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El robot tiene la canasta llena, pero ve otra manzana madura. ¿Qué debe hacer?",
          "elecciones": ["Dejar la manzana y volver a la base", "Intentar llevar una manzana extra", "Comer la manzana para hacer espacio"],
          "consecuencias": {
            "Dejar la manzana y volver a la base": {
              "resultado": "El robot entrega las manzanas recolectadas.",
              "feedback": "Animación: Robot entrega canasta. Mensaje: 'Reconociste la limitación de capacidad.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Intentar llevar una manzana extra": {
              "resultado": "El robot derrama manzanas.",
              "feedback": "Animación: Manzanas en el suelo. Mensaje: 'Forzar capacidades lleva a errores.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Comer la manzana para hacer espacio": {
              "resultado": "El robot 'come' una manzana y recoge otra.",
              "feedback": "Animación: Robot simula comer. Mensaje: 'Solución creativa, pero poco práctica.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hay una tormenta acercándose y el robot está lejos de la base. ¿Qué debe hacer?",
          "elecciones": ["Regresar a la base rápidamente", "Seguir recolectando", "Esconderse bajo un árbol"],
          "consecuencias": {
            "Regresar a la base rápidamente": {
              "resultado": "El robot llega seguro a la base.",
              "feedback": "Animación: Robot corre a la base. Mensaje: 'Priorizaste la premisa 'peligro' sobre la tarea.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Seguir recolectando": {
              "resultado": "El robot se moja y algunas manzanas se echan a perder.",
              "feedback": "Animación: Robot bajo la lluvia. Mensaje: 'Ignorar riesgos externos es un error lógico.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Esconderse bajo un árbol": {
              "resultado": "El robot se protege, pero pierde tiempo.",
              "feedback": "Animación: Robot bajo un árbol. Mensaje: 'Solución parcial. Podrías haber optimizado más.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El robot ha recolectado 9/10 manzanas y ve la última al otro lado de un charco. ¿Qué debe hacer?",
          "elecciones": ["Cruzar el charco para recolectar la última manzana", "Dejar la última manzana e ir a la base", "Buscar un camino alternativo"],
          "consecuencias": {
            "Cruzar el charco para recolectar la última manzana": {
              "resultado": "El robot cruza con éxito y completa la tarea.",
              "feedback": "Animación: Robot cruza charco. Mensaje: 'Tomaste un riesgo calculado para cumplir el objetivo.'",
              "puntuacion": 20,
              "final": true
            },
            "Dejar la última manzana e ir a la base": {
              "resultado": "El robot entrega 9 manzanas.",
              "feedback": "Animación: Robot en la base. Mensaje: 'Seguro, pero no completaste la tarea.'",
              "puntuacion": 10,
              "final": true
            },
            "Buscar un camino alternativo": {
              "resultado": "El robot tarda mucho y la manzana se cae.",
              "feedback": "Animación: Manzana en el suelo. Mensaje: 'La demora hizo que perdieras la oportunidad.'",
              "puntuacion": 0,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 7,
      "titulo": "El Guardarropa de Lucas",
      "enunciado": "Ayuda a Lucas a elegir su atuendo según el clima, la ocasión y su estado de ánimo. Combina prendas de vestir usando condiciones lógicas para que siempre esté cómodo y adecuado.",
      "preguntas": [
        {
          "pregunta": "Hoy hace frío y Lucas tiene una reunión formal. ¿Qué debe usar?",
          "elecciones": ["Traje formal con abrigo", "Jeans y sudadera", "Camisa y chaleco"],
          "consecuencias": {
            "Traje formal con abrigo": {
              "resultado": "Lucas está elegante y abrigado.",
              "feedback": "Animación: Lucas con traje y abrigo. Mensaje: 'Combinaste las premisas 'frío' y 'formal' perfectamente.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Jeans y sudadera": {
              "resultado": "Lucas tiene frío y parece informal.",
              "feedback": "Animación: Lucas tiembla con jeans. Mensaje: 'No cumpliste con la premisa 'formal'.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Camisa y chaleco": {
              "resultado": "Lucas está elegante, pero tiene frío.",
              "feedback": "Animación: Lucas con chaleco y frío. Mensaje: 'Falta considerar la premisa 'frío'.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Lucas tiene prisa y debe elegir entre ropa limpia y planchada o arrugada. ¿Qué debe hacer?",
          "elecciones": ["Usar ropa limpia y planchada", "Usar ropa arrugada para ahorrar tiempo", "Planchar rápidamente"],
          "consecuencias": {
            "Usar ropa limpia y planchada": {
              "resultado": "Lucas llega impecable, pero 5 minutos tarde.",
              "feedback": "Animación: Lucas corre con traje planchado. Mensaje: 'Priorizaste la apariencia sobre el tiempo.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Usar ropa arrugada para ahorrar tiempo": {
              "resultado": "Lucas llega a tiempo, pero desaliñado.",
              "feedback": "Animación: Lucas con camisa arrugada. Mensaje: 'Sacrificaste una premisa ('apariencia') por otra ('tiempo').'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Planchar rápidamente": {
              "resultado": "Lucas quema la camisa y debe cambiarse.",
              "feedback": "Animación: Camisa quemada. Mensaje: 'Intentar hacer dos cosas a la vez sin recursos lleva a errores.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Hace calor y Lucas va a la playa. ¿Qué debe llevar?",
          "elecciones": ["Shorts, camiseta y sandalias", "Jeans y tenis", "Traje de baño y toalla"],
          "consecuencias": {
            "Shorts, camiseta y sandalias": {
              "resultado": "Lucas está cómodo y listo para la playa.",
              "feedback": "Animación: Lucas sonríe en la playa. Mensaje: 'Cumpliste con las premisas 'calor' y 'playa'.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Jeans y tenis": {
              "resultado": "Lucas suda y se siente incómodo.",
              "feedback": "Animación: Lucas con jeans en la playa. Mensaje: 'Ignoraste la premisa 'calor'.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Traje de baño y toalla": {
              "resultado": "Lucas está listo para nadar, pero no para caminar.",
              "feedback": "Animación: Lucas con traje de baño en la calle. Mensaje: 'No consideraste el contexto completo.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Lucas tiene una cita romántica en un restaurante elegante. ¿Qué debe usar?",
          "elecciones": ["Traje oscuro y corbata", "Camisa y jeans", "Sudadera y tenis"],
          "consecuencias": {
            "Traje oscuro y corbata": {
              "resultado": "Lucas impresiona a su cita.",
              "feedback": "Animación: Lucas y su cita sonríen. Mensaje: 'Elegiste la opción que cumple con todas las premisas ('elegante' y 'cita').'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Camisa y jeans": {
              "resultado": "Lucas parece casual, pero no elegante.",
              "feedback": "Animación: Lucas con jeans en el restaurante. Mensaje: 'Solución parcial. Podrías mejorar.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Sudadera y tenis": {
              "resultado": "La cita se decepciona.",
              "feedback": "Animación: Cita mira a Lucas con sorpresa. Mensaje: 'Ignoraste la premisa 'elegante'.'",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Lucas debe asistir a una boda al aire libre con clima variable. ¿Qué debe usar?",
          "elecciones": ["Traje ligero con saco y paraguas plegable", "Jeans y chaqueta", "Shorts y camiseta"],
          "consecuencias": {
            "Traje ligero con saco y paraguas plegable": {
              "resultado": "Lucas está preparado para cualquier cambio climático.",
              "feedback": "Animación: Lucas con saco y paraguas. Mensaje: 'Anticipaste múltiples premisas ('clima variable', 'boda').'",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Jeans y chaqueta": {
              "resultado": "Lucas está cómodo, pero no muy elegante.",
              "feedback": "Animación: Lucas con jeans en la boda. Mensaje: 'No optimizaste para la premisa 'boda'.'",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Shorts y camiseta": {
              "resultado": "Lucas parece inapropiado para la boda.",
              "feedback": "Animación: Invitados miran a Lucas. Mensaje: 'Ignoraste las premisas 'boda' y 'clima variable'.'",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Lucas está enfermo y debe quedarse en casa. ¿Qué ropa debe usar?",
          "elecciones": ["Pijama y bata", "Ropa deportiva", "Jeans y camiseta"],
          "consecuencias": {
            "Pijama y bata": {
              "resultado": "Lucas está cómodo y se recupera rápido.",
              "feedback": "Animación: Lucas en el sofá con pijama. Mensaje: 'Priorizaste la premisa 'enfermo' y 'comodidad'.'",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Ropa deportiva": {
              "resultado": "Lucas está cómodo, pero no tanto como con pijama.",
              "feedback": "Animación: Lucas con sudadera. Mensaje: 'Solución válida, pero no óptima.'",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Jeans y camiseta": {
              "resultado": "Lucas no está cómodo y tarda en recuperarse.",
              "feedback": "Animación: Lucas tose con jeans. Mensaje: 'No adaptaste tu elección a la premisa 'enfermo'.'",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Lucas tiene una entrevista de trabajo y llueve. ¿Qué debe usar?",
          "elecciones": ["Traje formal, abrigo y paraguas", "Jeans, chaqueta y gorra", "Camisa, pantalón y tenis"],
          "consecuencias": {
            "Traje formal, abrigo y paraguas": {
              "resultado": "Lucas llega seco, elegante y listo para la entrevista.",
              "feedback": "Animación: Lucas con traje y paraguas. Mensaje: 'Integraste todas las premisas ('entrevista', 'lluvia').'",
              "puntuacion": 20,
              "final": true
            },
            "Jeans, chaqueta y gorra": {
              "resultado": "Lucas llega seco, pero informal.",
              "feedback": "Animación: Lucas con gorra en la entrevista. Mensaje: 'Cumpliste con 'lluvia', pero no con 'entrevista'.'",
              "puntuacion": 5,
              "final": true
            },
            "Camisa, pantalón y tenis": {
              "resultado": "Lucas llega mojado y desaliñado.",
              "feedback": "Animación: Lucas con camisa mojada. Mensaje: 'Ignoraste la premisa 'lluvia'.'",
              "puntuacion": -10,
              "final": true
            }
          }
        }
      ]
    }
  ],
  "ejemplos": [
    {
      "id": 1,
      "titulo": "El Chef y los Ingredientes",
      "enunciado": "Eres un chef en un restaurante y debes preparar platos según los ingredientes disponibles. Cada día recibes pedidos diferentes y debes decidir cómo combinarlos para satisfacer a los clientes. Usa pensamiento lógico para no desperdiciar comida y crear los mejores platos. ¡Cada elección afecta la satisfacción del cliente y la reputación del restaurante!",
      "preguntas": [
        {
          "pregunta": "Un cliente pide una ensalada César, pero solo tienes lechuga, pollo y aderezo ranch. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar una ensalada con los ingredientes disponibles",
            "Decir que no hay ingredientes para la ensalada César",
            "Servir solo lechuga con aderezo ranch"
          ],
          "consecuencias": {
            "Preparar una ensalada con los ingredientes disponibles": {
              "resultado": "El cliente disfruta de una ensalada de pollo con aderezo ranch.",
              "feedback": "Usaste los ingredientes disponibles para crear una alternativa lógica. En pensamiento lógico, adaptarse a las premisas disponibles es clave para resolver problemas.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decir que no hay ingredientes para la ensalada César": {
              "resultado": "El cliente se va insatisfecho.",
              "feedback": "Ignoraste la posibilidad de usar los ingredientes disponibles para ofrecer una alternativa. En lógica, siempre busca soluciones con lo que tienes.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Servir solo lechuga con aderezo ranch": {
              "resultado": "El cliente acepta el plato, pero no está completamente satisfecho.",
              "feedback": "Ofreciste una solución parcial. En programación, es importante aprovechar al máximo los recursos disponibles para optimizar resultados.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide pasta con salsa boloñesa, pero no tienes carne molida. Sin embargo, tienes champiñones y tomate. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar pasta con salsa de champiñones y tomate",
            "Decir que no hay salsa boloñesa",
            "Servir pasta sola con mantequilla"
          ],
          "consecuencias": {
            "Preparar pasta con salsa de champiñones y tomate": {
              "resultado": "El cliente disfruta de un plato creativo y delicioso.",
              "feedback": "Combinaste los ingredientes disponibles para crear una alternativa lógica y satisfactoria. Esto demuestra cómo el pensamiento lógico puede transformar limitaciones en oportunidades.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decir que no hay salsa boloñesa": {
              "resultado": "El cliente se va sin probar nada.",
              "feedback": "No exploraste alternativas con los ingredientes disponibles. En lógica, es importante evaluar todas las opciones antes de descartar una solución.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Servir pasta sola con mantequilla": {
              "resultado": "El cliente come, pero no está satisfecho.",
              "feedback": "Ofreciste una solución básica, pero no optimizaste los recursos disponibles. En programación, esto sería como usar una función simple cuando podrías implementar una más completa.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente vegetariano pide una hamburguesa. Tienes pan, queso, lechuga, tomate y huevos. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar una hamburguesa vegetariana con huevo, queso y vegetales",
            "Decir que no hay hamburguesas vegetarianas",
            "Servir un sándwich de queso y vegetales"
          ],
          "consecuencias": {
            "Preparar una hamburguesa vegetariana con huevo, queso y vegetales": {
              "resultado": "El cliente queda encantado con la alternativa vegetariana.",
              "feedback": "Usaste los ingredientes disponibles para crear un plato que cumple con las restricciones del cliente. Esto refleja cómo el pensamiento lógico puede adaptarse a condiciones específicas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decir que no hay hamburguesas vegetarianas": {
              "resultado": "El cliente se va molesto.",
              "feedback": "No exploraste la posibilidad de adaptar los ingredientes disponibles para satisfacer la necesidad del cliente. En lógica, siempre busca alternativas antes de descartar una solución.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Servir un sándwich de queso y vegetales": {
              "resultado": "El cliente come, pero esperaba algo más cercano a una hamburguesa.",
              "feedback": "Ofreciste una solución, pero no optimizaste los ingredientes para cumplir con la expectativa del cliente. En programación, esto sería como implementar una solución parcial en lugar de una completa.",
              "puntuacion": 10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide sopa de tomate, pero no tienes crema. Tienes tomates, cebolla, ajo y caldo. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar sopa de tomate sin crema",
            "Decir que no se puede hacer la sopa",
            "Servir una ensalada de tomate"
          ],
          "consecuencias": {
            "Preparar sopa de tomate sin crema": {
              "resultado": "El cliente disfruta de una sopa de tomate casera y auténtica.",
              "feedback": "Usaste los ingredientes disponibles para preparar el plato solicitado, demostrando cómo adaptarse a las premisas disponibles sin comprometer el resultado.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decir que no se puede hacer la sopa": {
              "resultado": "El cliente se va sin probar nada.",
              "feedback": "No consideraste la posibilidad de preparar el plato sin el ingrediente faltante. En lógica, es importante evaluar todas las alternativas antes de descartar una solución.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Servir una ensalada de tomate": {
              "resultado": "El cliente acepta la ensalada, pero esperaba sopa.",
              "feedback": "Ofreciste una alternativa, pero no cumpliste con la expectativa original. En programación, esto sería como devolver un resultado parcial cuando se esperaba uno completo.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide un postre de chocolate, pero no tienes chocolate. Tienes cacao en polvo, azúcar, mantequilla y harina. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar un brownie con cacao en polvo",
            "Decir que no hay postre de chocolate",
            "Servir galletas de azúcar"
          ],
          "consecuencias": {
            "Preparar un brownie con cacao en polvo": {
              "resultado": "El cliente disfruta de un delicioso brownie.",
              "feedback": "Usaste los ingredientes disponibles para crear un postre que cumple con la expectativa del cliente. Esto demuestra cómo el pensamiento lógico puede encontrar soluciones creativas con recursos limitados.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decir que no hay postre de chocolate": {
              "resultado": "El cliente se va decepcionado.",
              "feedback": "No exploraste la posibilidad de usar el cacao en polvo para preparar un postre similar. En lógica, siempre busca alternativas antes de descartar una solución.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Servir galletas de azúcar": {
              "resultado": "El cliente come las galletas, pero esperaba chocolate.",
              "feedback": "Ofreciste una alternativa, pero no cumpliste con la expectativa del cliente. En programación, esto sería como devolver un valor por defecto cuando se esperaba un resultado específico.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide un cóctel sin alcohol, pero no tienes jugo de frutas fresco. Tienes refrescos, hielo y frutas enlatadas. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar un cóctel con refresco y frutas enlatadas",
            "Decir que no hay ingredientes para el cóctel",
            "Servir agua con hielo"
          ],
          "consecuencias": {
            "Preparar un cóctel con refresco y frutas enlatadas": {
              "resultado": "El cliente disfruta de una bebida refrescante y dulce.",
              "feedback": "Combinaste los ingredientes disponibles para crear una alternativa que satisface al cliente. Esto refleja cómo el pensamiento lógico puede adaptarse a limitaciones para ofrecer soluciones efectivas.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decir que no hay ingredientes para el cóctel": {
              "resultado": "El cliente se va sin probar nada.",
              "feedback": "No exploraste la posibilidad de usar los ingredientes disponibles para crear una alternativa. En lógica, siempre evalúa todas las opciones antes de descartar una solución.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Servir agua con hielo": {
              "resultado": "El cliente acepta el agua, pero esperaba algo más.",
              "feedback": "Ofreciste una solución básica, pero no optimizaste los recursos disponibles. En programación, esto sería como implementar una función mínima cuando podrías ofrecer algo más completo.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide un plato principal con carne, pero solo tienes vegetales y queso. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar un plato de vegetales al horno con queso gratinado",
            "Decir que no hay platos con carne",
            "Servir una ensalada simple"
          ],
          "consecuencias": {
            "Preparar un plato de vegetales al horno con queso gratinado": {
              "resultado": "El cliente disfruta de un plato vegetariano delicioso y satisfactorio.",
              "feedback": "Usaste los ingredientes disponibles para crear un plato alternativo que cumple con las expectativas del cliente. Esto demuestra cómo el pensamiento lógico puede transformar limitaciones en oportunidades creativas.",
              "puntuacion": 20,
              "final": true
            },
            "Decir que no hay platos con carne": {
              "resultado": "El cliente se va insatisfecho.",
              "feedback": "No exploraste la posibilidad de ofrecer una alternativa con los ingredientes disponibles. En lógica, siempre busca soluciones antes de descartar una opción.",
              "puntuacion": -15,
              "final": true
            },
            "Servir una ensalada simple": {
              "resultado": "El cliente come, pero esperaba algo más sustancioso.",
              "feedback": "Ofreciste una solución básica, pero no optimizaste los ingredientes disponibles para crear un plato más satisfactorio. En programación, esto sería como implementar una solución mínima en lugar de una completa.",
              "puntuacion": 5,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 2,
      "titulo": "La Enfermera y los Pacientes",
      "enunciado": "Eres una enfermera en un centro de salud y debes decidir cómo atender a los pacientes según sus síntomas y los recursos disponibles. Cada decisión afecta la salud de los pacientes y la eficiencia del centro. Usa pensamiento lógico para priorizar casos y optimizar el uso de medicamentos y tiempo.",
      "preguntas": [
        {
          "pregunta": "Un paciente llega con fiebre alta y dolor de cabeza. Tienes paracetamol y termómetros. ¿Qué debes hacer?",
          "elecciones": [
            "Tomar su temperatura y darle paracetamol",
            "Decirle que espere sin atención",
            "Darles solo agua y reposo"
          ],
          "consecuencias": {
            "Tomar su temperatura y darle paracetamol": {
              "resultado": "El paciente se siente mejor y su fiebre baja.",
              "feedback": "Usaste los recursos disponibles para atender al paciente según sus síntomas. En pensamiento lógico, actuar según las premisas disponibles es esencial para resolver problemas de manera efectiva.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decirle que espere sin atención": {
              "resultado": "El paciente empeora y se va molesto.",
              "feedback": "Ignoraste la necesidad de actuar según los síntomas del paciente. En lógica, postergar soluciones puede empeorar los problemas.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Darles solo agua y reposo": {
              "resultado": "El paciente se hidrata, pero la fiebre no baja.",
              "feedback": "Ofreciste una solución parcial. En programación, esto sería como implementar una función básica cuando se necesita una más completa.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un niño llega con un corte pequeño en la rodilla. Tienes gasas, alcohol y curitas. ¿Qué debes hacer?",
          "elecciones": [
            "Limpiar la herida con alcohol, poner gasa y curita",
            "Solo poner una curita sin limpiar",
            "Decirle que no es grave y que se vaya"
          ],
          "consecuencias": {
            "Limpiar la herida con alcohol, poner gasa y curita": {
              "resultado": "El niño se va feliz con la herida limpia y protegida.",
              "feedback": "Seguiste el procedimiento lógico para atender una herida menor. En pensamiento lógico, seguir pasos ordenados según las premisas garantiza resultados efectivos.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Solo poner una curita sin limpiar": {
              "resultado": "La herida podría infectarse.",
              "feedback": "No seguiste todos los pasos necesarios según las premisas. En lógica, omitir pasos clave puede llevar a resultados negativos.",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Decirle que no es grave y que se vaya": {
              "resultado": "El niño se va sin atención adecuada.",
              "feedback": "Ignoraste la necesidad de actuar según la premisa 'herida'. En programación, esto sería como no manejar una excepción importante.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Una paciente embarazada llega con náuseas. Tienes jengibre y agua mineral. ¿Qué debes hacer?",
          "elecciones": [
            "Preparar una infusión de jengibre",
            "Darles solo agua mineral",
            "Decirle que es normal y no hacer nada"
          ],
          "consecuencias": {
            "Preparar una infusión de jengibre": {
              "resultado": "La paciente se siente aliviada y agradecida.",
              "feedback": "Usaste los recursos disponibles para aliviar los síntomas de la paciente. En pensamiento lógico, adaptarse a las premisas específicas de cada caso es fundamental.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Darles solo agua mineral": {
              "resultado": "La paciente se hidrata, pero las náuseas persisten.",
              "feedback": "Ofreciste una solución parcial. En programación, esto sería como implementar una función que no resuelve completamente el problema.",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Decirle que es normal y no hacer nada": {
              "resultado": "La paciente se va insatisfecha.",
              "feedback": "Ignoraste la oportunidad de aliviar sus síntomas con los recursos disponibles. En lógica, siempre actúa según las premisas para mejorar los resultados.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un anciano llega con dolor articular. Tienes analgésicos y una manta térmica. ¿Qué debes hacer?",
          "elecciones": [
            "Darles un analgésico y aplicar la manta térmica",
            "Solo darles el analgésico",
            "Decirle que el dolor es normal a su edad"
          ],
          "consecuencias": {
            "Darles un analgésico y aplicar la manta térmica": {
              "resultado": "El anciano se siente aliviado y cómodo.",
              "feedback": "Combinaste los recursos disponibles para atender al paciente de manera integral. En pensamiento lógico, usar todas las premisas disponibles optimiza los resultados.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Solo darles el analgésico": {
              "resultado": "El dolor disminuye, pero no completamente.",
              "feedback": "Ofreciste una solución parcial. En programación, esto sería como usar una sola función cuando podrías combinar varias para un mejor resultado.",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Decirle que el dolor es normal a su edad": {
              "resultado": "El anciano se va molesto y sin alivio.",
              "feedback": "Ignoraste la necesidad de actuar según las premisas disponibles. En lógica, siempre busca soluciones aunque sean parciales.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un paciente diabético llega con niveles altos de azúcar. Tienes insulina y jugo de naranja natural. ¿Qué debes hacer?",
          "elecciones": [
            "Aplicar insulina y monitorear sus niveles",
            "Darles jugo de naranja para subir más el azúcar",
            "Decirle que espere a que baje solo"
          ],
          "consecuencias": {
            "Aplicar insulina y monitorear sus niveles": {
              "resultado": "El paciente se estabiliza y se va aliviado.",
              "feedback": "Actuaste según las premisas específicas del paciente. En pensamiento lógico, adaptar las acciones a las condiciones particulares es esencial.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Darles jugo de naranja para subir más el azúcar": {
              "resultado": "El paciente empeora y necesita atención de emergencia.",
              "feedback": "Tomaste una acción contraria a las premisas del paciente. En lógica, actuar en contra de las condiciones dadas lleva a resultados negativos.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Decirle que espere a que baje solo": {
              "resultado": "El paciente se va sin atención adecuada.",
              "feedback": "Ignoraste la necesidad de actuar según las premisas críticas. En programación, esto sería como no manejar un error importante.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un paciente con alergia llega con dificultad para respirar. Tienes un inhalador y antihistamínicos. ¿Qué debes hacer?",
          "elecciones": [
            "Usar el inhalador y administrar antihistamínicos",
            "Solo darle el inhalador",
            "Decirle que respire hondo y se calme"
          ],
          "consecuencias": {
            "Usar el inhalador y administrar antihistamínicos": {
              "resultado": "El paciente se recupera rápidamente.",
              "feedback": "Combinaste los recursos disponibles para atender una emergencia según las premisas del paciente. En pensamiento lógico, actuar de manera integral ante situaciones críticas es fundamental.",
              "puntuacion": 25,
              "siguiente_ronda": true
            },
            "Solo darle el inhalador": {
              "resultado": "El paciente mejora, pero no completamente.",
              "feedback": "Ofreciste una solución parcial. En programación, esto sería como usar una sola herramienta cuando se necesitan varias para resolver un problema complejo.",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Decirle que respire hondo y se calme": {
              "resultado": "El paciente empeora y necesita atención de emergencia.",
              "feedback": "Ignoraste la gravedad de las premisas y no actuaste según los recursos disponibles. En lógica, subestimar condiciones críticas puede tener consecuencias graves.",
              "puntuacion": -20,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un paciente llega con síntomas de gripe: fiebre, tos y dolor de garganta. Tienes antitérmicos, jarabe para la tos y pastillas para el dolor de garganta. ¿Qué debes hacer?",
          "elecciones": [
            "Administrar antitérmicos, jarabe para la tos y pastillas para el dolor de garganta",
            "Solo darle antitérmicos para la fiebre",
            "Decirle que tome té en casa y se vaya"
          ],
          "consecuencias": {
            "Administrar antitérmicos, jarabe para la tos y pastillas para el dolor de garganta": {
              "resultado": "El paciente se siente aliviado y mejora rápidamente.",
              "feedback": "Usaste todos los recursos disponibles para tratar cada síntoma según las premisas del paciente. En pensamiento lógico, abordar cada condición de manera integral garantiza los mejores resultados.",
              "puntuacion": 30,
              "final": true
            },
            "Solo darle antitérmicos para la fiebre": {
              "resultado": "La fiebre baja, pero la tos y el dolor de garganta persisten.",
              "feedback": "Ofreciste una solución parcial. En programación, esto sería como corregir solo un error en un sistema con múltiples fallos.",
              "puntuacion": 5,
              "final": true
            },
            "Decirle que tome té en casa y se vaya": {
              "resultado": "El paciente se va insatisfecho y su condición empeora.",
              "feedback": "Ignoraste la necesidad de actuar según las premisas críticas del paciente. En lógica, no atender condiciones importantes puede llevar a consecuencias negativas.",
              "puntuacion": -20,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 3,
      "titulo": "El Dueño de la Tienda",
      "enunciado": "Eres el dueño de una tienda y debes decidir cómo manejar el inventario, las ventas y la atención al cliente. Cada día enfrentas diferentes situaciones y debes usar pensamiento lógico para optimizar las ganancias y mantener satisfechos a los clientes. ¡Toma decisiones basadas en el stock, las demandas y los recursos disponibles!",
      "preguntas": [
        {
          "pregunta": "Un cliente pide un producto que está agotado, pero tienes un producto similar en stock. ¿Qué debes hacer?",
          "elecciones": [
            "Ofrecer el producto similar como alternativa",
            "Decir que no hay stock y no ofrecer alternativas",
            "Prometer que el producto llegará pronto sin estar seguro"
          ],
          "consecuencias": {
            "Ofrecer el producto similar como alternativa": {
              "resultado": "El cliente compra el producto similar y se va satisfecho.",
              "feedback": "Usaste el stock disponible para ofrecer una alternativa lógica. En pensamiento lógico, adaptarse a las premisas disponibles es clave para resolver problemas y satisfacer necesidades.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decir que no hay stock y no ofrecer alternativas": {
              "resultado": "El cliente se va sin comprar nada.",
              "feedback": "Ignoraste la posibilidad de usar los recursos disponibles para ofrecer una solución. En lógica, siempre busca alternativas antes de descartar una venta.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Prometer que el producto llegará pronto sin estar seguro": {
              "resultado": "El cliente se molesta cuando descubre que no llegará pronto.",
              "feedback": "Ofreciste una solución basada en una premisa incierta. En programación, esto sería como prometer un resultado sin validar las condiciones.",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un proveedor ofrece un descuento por comprar al por mayor, pero no tienes suficiente espacio en el almacén. ¿Qué debes hacer?",
          "elecciones": [
            "Comprar solo lo que cabe en el almacén y aprovechar parte del descuento",
            "Comprar todo al por mayor y almacenar el exceso en un espacio temporal",
            "Rechazar la oferta por falta de espacio"
          ],
          "consecuencias": {
            "Comprar solo lo que cabe en el almacén y aprovechar parte del descuento": {
              "resultado": "Ahorras dinero sin saturar el almacén.",
              "feedback": "Adaptaste tu decisión a las premisas disponibles ('espacio limitado' y 'descuento'). En pensamiento lógico, optimizar recursos según las condiciones es esencial.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Comprar todo al por mayor y almacenar el exceso en un espacio temporal": {
              "resultado": "Aprovechas el descuento, pero pagas extra por almacenamiento temporal.",
              "feedback": "Actuaste según la premisa del descuento, pero no optimizaste completamente los recursos. En lógica, evaluar costos adicionales es importante.",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Rechazar la oferta por falta de espacio": {
              "resultado": "Pierdes la oportunidad de ahorrar dinero.",
              "feedback": "Ignoraste la posibilidad de adaptarte a las premisas para aprovechar el descuento. En programación, esto sería como no optimizar un algoritmo por limitaciones temporales.",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente quiere devolver un producto sin etiqueta ni recibo. ¿Qué debes hacer?",
          "elecciones": [
            "Aceptar la devolución y ofrecer un vale por el valor del producto",
            "Rechazar la devolución por falta de comprobante",
            "Dar un reembolso en efectivo sin verificar"
          ],
          "consecuencias": {
            "Aceptar la devolución y ofrecer un vale por el valor del producto": {
              "resultado": "El cliente se va satisfecho y regresa a comprar.",
              "feedback": "Encontraste una solución que equilibra las premisas ('política de devoluciones' y 'satisfacción del cliente'). En pensamiento lógico, buscar alternativas que beneficien a ambas partes es clave.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Rechazar la devolución por falta de comprobante": {
              "resultado": "El cliente se va molesto y no regresa.",
              "feedback": "Aplicaste estrictamente las reglas, pero no consideraste la premisa de 'fidelización del cliente'. En lógica, la rigidez puede llevar a perder oportunidades.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Dar un reembolso en efectivo sin verificar": {
              "resultado": "El cliente se va feliz, pero podrías estar perdiendo dinero por fraudes.",
              "feedback": "Actuaste sin validar las premisas, lo que puede llevar a resultados negativos. En programación, esto sería como no validar entradas de usuario.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un producto está próximo a vencerse y no se ha vendido. ¿Qué debes hacer?",
          "elecciones": [
            "Hacer una promoción para venderlo rápidamente",
            "Donarlo a una organización benéfica",
            "Dejarlo en el estante hasta que venza"
          ],
          "consecuencias": {
            "Hacer una promoción para venderlo rápidamente": {
              "resultado": "El producto se vende y evitas pérdidas.",
              "feedback": "Usaste una estrategia lógica para manejar la premisa 'producto próximo a vencerse'. En pensamiento lógico, actuar proactivamente ante limitaciones es esencial.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Donarlo a una organización benéfica": {
              "resultado": "Pierdes el valor del producto, pero ganas buena voluntad.",
              "feedback": "Tomaste una decisión ética, pero no optimizaste el recurso económico. En lógica, evaluar el impacto a largo plazo es importante.",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Dejarlo en el estante hasta que venza": {
              "resultado": "El producto se echa a perder y debes tirarlo.",
              "feedback": "Ignoraste la premisa 'próximo a vencerse' y perdiste el recurso. En programación, esto sería como no manejar un tiempo límite en un proceso.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide un producto que está en el almacén, pero no en la tienda. ¿Qué debes hacer?",
          "elecciones": [
            "Traer el producto del almacén y venderlo",
            "Decir que no está disponible en este momento",
            "Prometer enviarlo a su casa sin costo adicional"
          ],
          "consecuencias": {
            "Traer el producto del almacén y venderlo": {
              "resultado": "El cliente compra el producto y se va satisfecho.",
              "feedback": "Usaste los recursos disponibles ('producto en almacén') para satisfacer la demanda. En pensamiento lógico, aprovechar lo que tienes es clave.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decir que no está disponible en este momento": {
              "resultado": "El cliente se va sin comprar.",
              "feedback": "No exploraste la posibilidad de usar los recursos disponibles para satisfacer al cliente. En lógica, siempre busca soluciones antes de descartar una opción.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Prometer enviarlo a su casa sin costo adicional": {
              "resultado": "El cliente acepta, pero generas un costo adicional para la tienda.",
              "feedback": "Ofreciste una solución que cumple con la demanda, pero no optimizaste los recursos económicos. En programación, esto sería como implementar una función costosa sin evaluar alternativas.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un proveedor aumenta el precio de un producto que vendes mucho. ¿Qué debes hacer?",
          "elecciones": [
            "Buscar un nuevo proveedor con mejor precio",
            "Aumentar el precio de venta al público",
            "Dejar de vender ese producto"
          ],
          "consecuencias": {
            "Buscar un nuevo proveedor con mejor precio": {
              "resultado": "Mantienes tus márgenes y la satisfacción del cliente.",
              "feedback": "Actuaste según la premisa 'aumento de costo' buscando una alternativa lógica. En pensamiento lógico, adaptarse a cambios en las condiciones es esencial para mantener la eficiencia.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Aumentar el precio de venta al público": {
              "resultado": "Mantienes tus márgenes, pero algunos clientes dejan de comprar.",
              "feedback": "Ajustaste tu estrategia según la premisa, pero afectaste la demanda. En lógica, evaluar el impacto en todas las variables es importante.",
              "puntuacion": 10,
              "siguiente_ronda": true
            },
            "Dejar de vender ese producto": {
              "resultado": "Pierdes ventas y clientes.",
              "feedback": "Ignoraste la posibilidad de adaptarte a la nueva premisa. En programación, esto sería como eliminar una función importante sin buscar alternativas.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente quiere comprar un producto caro y pide descuento. ¿Qué debes hacer?",
          "elecciones": [
            "Ofrecer un descuento pequeño si compra otro producto",
            "Negar cualquier descuento",
            "Dar un descuento grande para cerrar la venta rápidamente"
          ],
          "consecuencias": {
            "Ofrecer un descuento pequeño si compra otro producto": {
              "resultado": "El cliente compra ambos productos y se va satisfecho.",
              "feedback": "Usaste una estrategia lógica para aumentar las ventas sin perder márgenes. En pensamiento lógico, encontrar soluciones que beneficien a ambas partes es clave.",
              "puntuacion": 20,
              "final": true
            },
            "Negar cualquier descuento": {
              "resultado": "El cliente se va sin comprar.",
              "feedback": "No exploraste alternativas para cerrar la venta. En lógica, la rigidez puede llevar a perder oportunidades.",
              "puntuacion": -10,
              "final": true
            },
            "Dar un descuento grande para cerrar la venta rápidamente": {
              "resultado": "El cliente compra, pero reduces tus márgenes de ganancia.",
              "feedback": "Cumpliste con la premisa 'cerrar la venta', pero no optimizaste el beneficio económico. En programación, esto sería como sacrificar eficiencia por rapidez.",
              "puntuacion": 5,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 4,
      "titulo": "El Estilista y los Clientas",
      "enunciado": "Eres un estilista en un salón de belleza y debes decidir cómo atender a tus clientes según sus solicitudes, el tiempo disponible y los productos que tienes. Cada decisión afecta la satisfacción del cliente y la reputación del salón. Usa pensamiento lógico para optimizar tu tiempo y recursos.",
      "preguntas": [
        {
          "pregunta": "Una clienta pide un corte de cabello moderno, pero no estás seguro de cómo hacerlo. ¿Qué debes hacer?",
          "elecciones": [
            "Consultar un tutorial rápido en tu tablet y luego cortar",
            "Decirle que no puedes hacerlo y ofrecer un corte clásico",
            "Intentar hacerlo sin estar seguro"
          ],
          "consecuencias": {
            "Consultar un tutorial rápido en tu tablet y luego cortar": {
              "resultado": "La clienta queda encantada con su nuevo corte.",
              "feedback": "Usaste los recursos disponibles (tutorial) para aprender y satisfacer la solicitud de la clienta. En pensamiento lógico, buscar información adicional para resolver problemas es una estrategia efectiva.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decirle que no puedes hacerlo y ofrecer un corte clásico": {
              "resultado": "La clienta acepta el corte clásico, pero no está completamente satisfecha.",
              "feedback": "Ofreciste una alternativa segura, pero no exploraste la posibilidad de aprender algo nuevo. En lógica, limitarte a lo conocido puede perder oportunidades de crecimiento.",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Intentar hacerlo sin estar seguro": {
              "resultado": "El corte queda mal y la clienta se va molesta.",
              "feedback": "Actuaste sin validar tus conocimientos, lo que llevó a un resultado negativo. En programación, esto sería como implementar una función sin probarla primero.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide un tinte de cabello, pero no tienes el color exacto que quiere. ¿Qué debes hacer?",
          "elecciones": [
            "Mezclar los tintes disponibles para crear un color similar",
            "Decirle que no tienes el color y ofrecer otro",
            "Usar el tinte más cercano sin decírselo"
          ],
          "consecuencias": {
            "Mezclar los tintes disponibles para crear un color similar": {
              "resultado": "El cliente queda satisfecho con el color personalizado.",
              "feedback": "Usaste los recursos disponibles para crear una solución adaptada a la solicitud del cliente. En pensamiento lógico, la creatividad dentro de las limitaciones es una habilidad valiosa.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decirle que no tienes el color y ofrecer otro": {
              "resultado": "El cliente elige otro color, pero no está completamente feliz.",
              "feedback": "Ofreciste una alternativa, pero no exploraste la posibilidad de personalizar una solución. En lógica, adaptarse a las premisas puede generar mejores resultados.",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Usar el tinte más cercano sin decírselo": {
              "resultado": "El cliente nota la diferencia y se molesta.",
              "feedback": "Actuaste sin transparencia y sin considerar las expectativas del cliente. En programación, esto sería como cambiar el comportamiento de una función sin documentarlo.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Una clienta llega con el cabello muy dañado y pide un alisado. ¿Qué debes hacer?",
          "elecciones": [
            "Recomendarle un tratamiento de reparación antes del alisado",
            "Hacer el alisado como ella pide",
            "Negarte a hacerle cualquier tratamiento"
          ],
          "consecuencias": {
            "Recomendarle un tratamiento de reparación antes del alisado": {
              "resultado": "La clienta acepta el tratamiento y su cabello mejora.",
              "feedback": "Actuaste según las premisas ('cabello dañado') para ofrecer una solución que beneficia a la clienta a largo plazo. En pensamiento lógico, considerar el impacto futuro es esencial.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Hacer el alisado como ella pide": {
              "resultado": "El cabello de la clienta se daña aún más.",
              "feedback": "Seguiste la solicitud sin considerar las condiciones del cabello. En lógica, actuar sin evaluar todas las premisas puede llevar a resultados negativos.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Negarte a hacerle cualquier tratamiento": {
              "resultado": "La clienta se va molesta y no regresa.",
              "feedback": "Ignoraste la posibilidad de ofrecer una alternativa beneficiosa. En programación, esto sería como rechazar una solicitud sin proponer una solución.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide un peinado elaborado, pero solo tienes 20 minutos antes de tu próxima cita. ¿Qué debes hacer?",
          "elecciones": [
            "Ofrecer un peinado más sencillo que puedas hacer en 20 minutos",
            "Intentar hacer el peinado elaborado rápidamente",
            "Decirle que no hay tiempo y que vuelva otro día"
          ],
          "consecuencias": {
            "Ofrecer un peinado más sencillo que puedas hacer en 20 minutos": {
              "resultado": "El cliente acepta y se va satisfecho.",
              "feedback": "Adaptaste tu servicio a las premisas disponibles ('tiempo limitado'). En pensamiento lógico, ajustarse a las condiciones es clave para mantener la calidad.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Intentar hacer el peinado elaborado rápidamente": {
              "resultado": "El peinado queda mal y el cliente se molesta.",
              "feedback": "Actuaste sin considerar la limitación de tiempo, lo que afectó el resultado. En programación, esto sería como forzar una operación compleja en un tiempo insuficiente.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Decirle que no hay tiempo y que vuelva otro día": {
              "resultado": "El cliente se va insatisfecho.",
              "feedback": "No exploraste alternativas para atender al cliente dentro de las limitaciones. En lógica, siempre busca soluciones parciales antes de rechazar una solicitud.",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Una clienta trae una foto de un peinado complejo y pide que se lo hagas igual. ¿Qué debes hacer?",
          "elecciones": [
            "Analizar la foto y explicarle si es posible hacerlo con su tipo de cabello",
            "Decirle que sí sin estar seguro y intentar hacerlo",
            "Rechazar la solicitud porque es muy complicada"
          ],
          "consecuencias": {
            "Analizar la foto y explicarle si es posible hacerlo con su tipo de cabello": {
              "resultado": "La clienta valora tu honestidad y elige un peinado adaptado a su cabello.",
              "feedback": "Evaluaste las premisas ('tipo de cabello' y 'complejidad del peinado') antes de actuar. En pensamiento lógico, analizar las condiciones es esencial para tomar decisiones informadas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decirle que sí sin estar seguro y intentar hacerlo": {
              "resultado": "El peinado no queda como en la foto y la clienta se decepciona.",
              "feedback": "Actuaste sin validar si podías cumplir con la solicitud. En programación, esto sería como prometer una funcionalidad sin estar seguro de poder implementarla.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Rechazar la solicitud porque es muy complicada": {
              "resultado": "La clienta se va molesta.",
              "feedback": "No exploraste la posibilidad de adaptar la solicitud a las condiciones reales. En lógica, siempre busca alternativas antes de rechazar una petición.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente pide que le cortes el cabello con una técnica que no dominas. ¿Qué debes hacer?",
          "elecciones": [
            "Explicarle que no dominas esa técnica y ofrecer una alternativa",
            "Intentar hacerlo igual para no perder al cliente",
            "Decirle que esa técnica no le quedaría bien"
          ],
          "consecuencias": {
            "Explicarle que no dominas esa técnica y ofrecer una alternativa": {
              "resultado": "El cliente aprecia tu honestidad y elige otra opción.",
              "feedback": "Reconociste tus limitaciones y ofreciste una alternativa. En pensamiento lógico, ser transparente y adaptarse es mejor que forzar una solución inadecuada.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Intentar hacerlo igual para no perder al cliente": {
              "resultado": "El corte queda mal y el cliente no regresa.",
              "feedback": "Actuaste sin las habilidades necesarias, lo que llevó a un resultado negativo. En programación, esto sería como implementar una función sin el conocimiento requerido.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Decirle que esa técnica no le quedaría bien": {
              "resultado": "El cliente se siente engañado y se va molesto.",
              "feedback": "No fuiste transparente con tus habilidades y desanimaste al cliente. En lógica, la honestidad es esencial para mantener la confianza.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Una clienta llega con una emergencia: su peinado para una boda se arruinó a última hora. ¿Qué debes hacer?",
          "elecciones": [
            "Priorizar su atención y hacerle un peinado rápido pero elegante",
            "Decirle que no hay tiempo y que busque otra solución",
            "Intentar arreglarlo, pero cobrarle el doble por la urgencia"
          ],
          "consecuencias": {
            "Priorizar su atención y hacerle un peinado rápido pero elegante": {
              "resultado": "La clienta se va feliz y agradecida a su boda.",
              "feedback": "Adaptaste tu servicio a una premisa de urgencia, priorizando la satisfacción del cliente. En pensamiento lógico, la flexibilidad ante situaciones críticas es fundamental.",
              "puntuacion": 25,
              "final": true
            },
            "Decirle que no hay tiempo y que busque otra solución": {
              "resultado": "La clienta se va desesperada y no regresa.",
              "feedback": "Ignoraste la oportunidad de ayudar en una situación crítica. En lógica, siempre busca soluciones aunque sean parciales.",
              "puntuacion": -20,
              "final": true
            },
            "Intentar arreglarlo, pero cobrarle el doble por la urgencia": {
              "resultado": "La clienta acepta, pero se siente estafada.",
              "feedback": "Aprovechaste la urgencia para aumentar el precio, lo que afecta la confianza del cliente. En programación, esto sería como abusar de una situación para obtener un beneficio injusto.",
              "puntuacion": -10,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 5,
      "titulo": "El Organizador de Fiestas",
      "enunciado": "Eres un organizador de fiestas y debes tomar decisiones rápidas para garantizar que cada evento sea un éxito. Desde manejar imprevistos hasta optimizar recursos, tu pensamiento lógico es clave para resolver problemas y mantener a los clientes satisfechos. ¡Cada elección afecta la reputación de tu negocio!",
      "preguntas": [
        {
          "pregunta": "El DJ canceló a última hora y la fiesta empieza en 2 horas. ¿Qué debes hacer?",
          "elecciones": [
            "Buscar un DJ de reemplazo rápidamente o poner una lista de música preparada",
            "Cancelar la música y decir que será una fiesta silenciosa",
            "Intentar convencer al DJ de que venga ofreciéndole más dinero"
          ],
          "consecuencias": {
            "Buscar un DJ de reemplazo rápidamente o poner una lista de música preparada": {
              "resultado": "La fiesta continúa sin problemas y los invitados disfrutan.",
              "feedback": "Actuaste rápidamente para adaptarte a la premisa 'DJ canceló' y garantizar que la fiesta no se arruinara. En pensamiento lógico, tener planes alternativos es esencial para manejar imprevistos.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Cancelar la música y decir que será una fiesta silenciosa": {
              "resultado": "Los invitados se aburren y se van temprano.",
              "feedback": "No exploraste alternativas para mantener la fiesta divertida. En lógica, siempre busca soluciones aunque sean temporales.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Intentar convencer al DJ de que venga ofreciéndole más dinero": {
              "resultado": "El DJ no acepta y pierdes dinero innecesariamente.",
              "feedback": "Actuaste sin evaluar la probabilidad de éxito. En programación, esto sería como intentar una solución costosa sin garantía de que funcione.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El pastel de cumpleaños llegó roto. ¿Qué debes hacer?",
          "elecciones": [
            "Comprar un pastel de emergencia en una panadería cercana",
            "Servir el pastel roto y decir que es estilo 'rústico'",
            "Decirle al cliente que no habrá pastel"
          ],
          "consecuencias": {
            "Comprar un pastel de emergencia en una panadería cercana": {
              "resultado": "El cliente no nota el cambio y la fiesta continúa sin problemas.",
              "feedback": "Tomaste acción rápida para resolver el problema según la premisa 'pastel roto'. En pensamiento lógico, resolver imprevistos con recursos alternativos es clave.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Servir el pastel roto y decir que es estilo 'rústico'": {
              "resultado": "Algunos invitados se ríen, pero el cliente se molesta.",
              "feedback": "Intentaste disimular el problema, pero no cumpliste con las expectativas. En lógica, ser transparente y buscar soluciones reales es mejor.",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Decirle al cliente que no habrá pastel": {
              "resultado": "El cliente se enoja y la fiesta pierde su momento clave.",
              "feedback": "No exploraste alternativas para resolver el problema. En programación, esto sería como no manejar un error crítico en un sistema.",
              "puntuacion": -20,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El lugar de la fiesta tiene un problema con el aire acondicionado y hace mucho calor. ¿Qué debes hacer?",
          "elecciones": [
            "Alquilar ventiladores portátiles de emergencia",
            "Decirle a los invitados que aguanten el calor",
            "Mover la fiesta a un área al aire libre si es posible"
          ],
          "consecuencias": {
            "Alquilar ventiladores portátiles de emergencia": {
              "resultado": "Los invitados se sienten cómodos y la fiesta continúa.",
              "feedback": "Tomaste una decisión rápida para adaptarte a la premisa 'problema con el aire acondicionado'. En pensamiento lógico, resolver problemas con soluciones temporales es una habilidad valiosa.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decirle a los invitados que aguanten el calor": {
              "resultado": "Los invitados se van temprano y el cliente se molesta.",
              "feedback": "Ignoraste la necesidad de actuar según las condiciones del entorno. En lógica, no resolver problemas afecta la experiencia general.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Mover la fiesta a un área al aire libre si es posible": {
              "resultado": "La fiesta continúa, pero algunos invitados se quejan del cambio.",
              "feedback": "Ofreciste una solución alternativa, pero no fue perfecta. En programación, esto sería como implementar un parche temporal que no resuelve completamente el problema.",
              "puntuacion": 10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El fotógrafo llegó tarde y se perdió los momentos clave de la fiesta. ¿Qué debes hacer?",
          "elecciones": [
            "Contratar a otro fotógrafo para que tome fotos de los invitados ahora",
            "Decirle al cliente que no habrá fotos de los momentos importantes",
            "Pedirle a los invitados que posen para fotos ahora"
          ],
          "consecuencias": {
            "Contratar a otro fotógrafo para que tome fotos de los invitados ahora": {
              "resultado": "El cliente recibe fotos de calidad y está satisfecho.",
              "feedback": "Actuaste rápidamente para compensar la premisa 'fotógrafo llegó tarde'. En pensamiento lógico, buscar soluciones alternativas es esencial para manejar imprevistos.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decirle al cliente que no habrá fotos de los momentos importantes": {
              "resultado": "El cliente se frustra y reclama.",
              "feedback": "No exploraste alternativas para resolver el problema. En lógica, siempre busca soluciones aunque sean parciales.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Pedirle a los invitados que posen para fotos ahora": {
              "resultado": "Los invitados posan, pero las fotos no capturan el ambiente real de la fiesta.",
              "feedback": "Ofreciste una solución, pero no fue óptima. En programación, esto sería como implementar una función que cumple parcialmente con los requisitos.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El cliente quiere cambiar el menú a última hora por algo más caro. ¿Qué debes hacer?",
          "elecciones": [
            "Explicarle que el cambio tiene un costo adicional y ver si acepta",
            "Aceptar el cambio sin cobrar extra para mantenerlo feliz",
            "Negarte rotundamente al cambio"
          ],
          "consecuencias": {
            "Explicarle que el cambio tiene un costo adicional y ver si acepta": {
              "resultado": "El cliente acepta pagar el extra y queda satisfecho.",
              "feedback": "Comunicaste claramente las implicaciones del cambio según las premisas económicas. En pensamiento lógico, la transparencia y la adaptación son clave.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Aceptar el cambio sin cobrar extra para mantenerlo feliz": {
              "resultado": "El cliente está feliz, pero reduces tus márgenes de ganancia.",
              "feedback": "Cumpliste con la solicitud del cliente, pero no optimizaste el beneficio económico. En lógica, equilibrar satisfacción y recursos es importante.",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Negarte rotundamente al cambio": {
              "resultado": "El cliente se molesta y amenaza con no contratarte nuevamente.",
              "feedback": "No exploraste alternativas para satisfacer al cliente. En programación, esto sería como rechazar una solicitud sin ofrecer opciones.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El lugar de la fiesta tiene una fuga de agua en el baño. ¿Qué debes hacer?",
          "elecciones": [
            "Llamar a un fontanero de emergencia y poner un letrero de 'baño fuera de servicio' temporalmente",
            "Ignorar el problema y dejar que los invitados usen el baño",
            "Cancelar la fiesta por la fuga"
          ],
          "consecuencias": {
            "Llamar a un fontanero de emergencia y poner un letrero de 'baño fuera de servicio' temporalmente": {
              "resultado": "El problema se resuelve rápidamente y la fiesta continúa sin mayores inconvenientes.",
              "feedback": "Tomaste acción inmediata para resolver la premisa 'fuga de agua' y minimizar el impacto. En pensamiento lógico, manejar imprevistos con rapidez es esencial.",
              "puntuacion": 25,
              "siguiente_ronda": true
            },
            "Ignorar el problema y dejar que los invitados usen el baño": {
              "resultado": "La fuga empeora y causa incomodidad a los invitados.",
              "feedback": "Ignoraste un problema crítico que afectó la experiencia de los invitados. En lógica, no resolver condiciones importantes lleva a consecuencias negativas.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Cancelar la fiesta por la fuga": {
              "resultado": "El cliente se frustra y cancela el contrato contigo.",
              "feedback": "Tomaste una decisión extrema sin explorar soluciones alternativas. En programación, esto sería como detener un sistema completo por un error en un módulo.",
              "puntuacion": -25,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El cliente quiere añadir fuegos artificiales a la fiesta, pero no está permitido en el lugar. ¿Qué debes hacer?",
          "elecciones": [
            "Ofrecer alternativas como luces y efectos especiales",
            "Decirle que no es posible sin ofrecer alternativas",
            "Hacer los fuegos artificiales igual, pero en un lugar oculto"
          ],
          "consecuencias": {
            "Ofrecer alternativas como luces y efectos especiales": {
              "resultado": "El cliente acepta la alternativa y la fiesta es un éxito.",
              "feedback": "Adaptaste la solicitud del cliente a las premisas legales y de seguridad. En pensamiento lógico, encontrar soluciones que cumplan con las restricciones es fundamental.",
              "puntuacion": 20,
              "final": true
            },
            "Decirle que no es posible sin ofrecer alternativas": {
              "resultado": "El cliente se frustra y busca otra opción.",
              "feedback": "No exploraste alternativas para satisfacer al cliente dentro de las limitaciones. En lógica, siempre busca soluciones aunque sean diferentes a lo solicitado.",
              "puntuacion": -10,
              "final": true
            },
            "Hacer los fuegos artificiales igual, pero en un lugar oculto": {
              "resultado": "Los fuegos artificiales causan un pequeño incendio y la fiesta se arruina.",
              "feedback": "Actuaste en contra de las premisas de seguridad, lo que llevó a un desastre. En programación, esto sería como ignorar las restricciones de un sistema y causar fallos críticos.",
              "puntuacion": -30,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 6,
      "titulo": "El Entrenador Deportivo",
      "enunciado": "Eres un entrenador deportivo y debes tomar decisiones para optimizar el rendimiento de tus atletas, manejar lesiones y planificar entrenamientos. Cada elección afecta el progreso del equipo y la salud de los jugadores. Usa pensamiento lógico para adaptarte a las condiciones físicas y mentales de cada atleta.",
      "preguntas": [
        {
          "pregunta": "Un atleta llega con dolor muscular después del último entrenamiento. ¿Qué debes hacer?",
          "elecciones": [
            "Programar una sesión de estiramientos y recuperación",
            "Ignorar el dolor y seguir con el entrenamiento normal",
            "Darles analgésicos y continuar con el entrenamiento"
          ],
          "consecuencias": {
            "Programar una sesión de estiramientos y recuperación": {
              "resultado": "El atleta se recupera y evita lesiones mayores.",
              "feedback": "Actuaste según la premisa 'dolor muscular' para prevenir problemas mayores. En pensamiento lógico, abordar síntomas a tiempo es clave para evitar consecuencias negativas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Ignorar el dolor y seguir con el entrenamiento normal": {
              "resultado": "El atleta sufre una lesión grave y debe descansar por semanas.",
              "feedback": "Ignoraste una señal de alerta crítica. En lógica, no actuar según las condiciones puede llevar a resultados catastróficos.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Darles analgésicos y continuar con el entrenamiento": {
              "resultado": "El dolor desaparece temporalmente, pero el atleta se lesiona después.",
              "feedback": "Enmascaraste el síntoma sin resolver la causa. En programación, esto sería como ocultar un error sin corregirlo.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un atleta no está rindiendo como antes y parece desmotivado. ¿Qué debes hacer?",
          "elecciones": [
            "Hablar con él para entender qué le pasa y ajustar su entrenamiento",
            "Aumentar la intensidad del entrenamiento para 'motivarlo'",
            "Ignorar el problema y seguir como siempre"
          ],
          "consecuencias": {
            "Hablar con él para entender qué le pasa y ajustar su entrenamiento": {
              "resultado": "El atleta se siente escuchado y mejora su rendimiento.",
              "feedback": "Abordaste la premisa 'desmotivación' desde su causa raíz. En pensamiento lógico, entender las condiciones subyacentes es esencial para resolver problemas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Aumentar la intensidad del entrenamiento para 'motivarlo'": {
              "resultado": "El atleta se frustra más y su rendimiento empeora.",
              "feedback": "Actuaste en contra de la premisa real ('desmotivación'). En lógica, forzar una solución sin analizar la causa puede empeorar las cosas.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Ignorar el problema y seguir como siempre": {
              "resultado": "El atleta sigue desmotivado y considera dejar el equipo.",
              "feedback": "Ignoraste una condición importante que afecta el rendimiento. En programación, esto sería como no manejar un estado crítico en un sistema.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un atleta quiere cambiar su rutina de entrenamiento por una que vio en internet. ¿Qué debes hacer?",
          "elecciones": [
            "Analizar la nueva rutina con él y adaptarla a sus necesidades",
            "Decirle que siga la rutina actual sin cambios",
            "Dejar que pruebe la nueva rutina sin supervisión"
          ],
          "consecuencias": {
            "Analizar la nueva rutina con él y adaptarla a sus necesidades": {
              "resultado": "El atleta se siente motivado y mejora su rendimiento con una rutina personalizada.",
              "feedback": "Evaluaste la nueva premisa ('rutina de internet') y la adaptaste a las condiciones reales del atleta. En pensamiento lógico, integrar nuevas ideas de manera crítica es valioso.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Decirle que siga la rutina actual sin cambios": {
              "resultado": "El atleta se desmotiva y deja de esforzarse.",
              "feedback": "No consideraste su interés por probar algo nuevo. En lógica, la flexibilidad para adaptarse a nuevas premisas puede mejorar los resultados.",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Dejar que pruebe la nueva rutina sin supervisión": {
              "resultado": "El atleta se lesiona por hacer ejercicios inadecuados.",
              "feedback": "Permitiste una acción sin validar su seguridad. En programación, esto sería como ejecutar código sin revisarlo.",
              "puntuacion": -20,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El equipo tiene un partido importante mañana y algunos atletas están nerviosos. ¿Qué debes hacer?",
          "elecciones": [
            "Organizar una sesión de visualización y relajación",
            "Ignorar los nervios y enfocarse solo en la estrategia",
            "Darles un discurso motivacional intenso"
          ],
          "consecuencias": {
            "Organizar una sesión de visualización y relajación": {
              "resultado": "Los atletas se sienten más confiados y rinden mejor en el partido.",
              "feedback": "Abordaste la premisa 'nervios' con una estrategia adecuada. En pensamiento lógico, manejar condiciones emocionales es tan importante como las físicas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Ignorar los nervios y enfocarse solo en la estrategia": {
              "resultado": "Los atletas rinden por debajo de su nivel por la tensión.",
              "feedback": "Ignoraste una condición que afecta el rendimiento. En lógica, no considerar todos los factores puede llevar a resultados subóptimos.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Darles un discurso motivacional intenso": {
              "resultado": "Algunos atletas se sienten presionados y rinden peor.",
              "feedback": "Actuaste sin considerar el impacto de tu enfoque. En programación, esto sería como forzar una optimización que en realidad empeora el rendimiento.",
              "puntuacion": -5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un atleta se lesiona durante un entrenamiento. ¿Qué debes hacer?",
          "elecciones": [
            "Detener el entrenamiento, evaluar la lesión y aplicar primeros auxilios",
            "Decirle que siga entrenando a pesar del dolor",
            "Llamar a una ambulancia inmediatamente sin evaluar la gravedad"
          ],
          "consecuencias": {
            "Detener el entrenamiento, evaluar la lesión y aplicar primeros auxilios": {
              "resultado": "La lesión se maneja adecuadamente y el atleta se recupera pronto.",
              "feedback": "Seguiste un protocolo lógico ante la premisa 'lesión'. En pensamiento lógico, actuar con calma y según las condiciones es esencial en emergencias.",
              "puntuacion": 25,
              "siguiente_ronda": true
            },
            "Decirle que siga entrenando a pesar del dolor": {
              "resultado": "La lesión empeora y el atleta debe operarse.",
              "feedback": "Ignoraste una condición crítica. En lógica, forzar una acción sin evaluar riesgos puede tener consecuencias graves.",
              "puntuacion": -25,
              "siguiente_ronda": true
            },
            "Llamar a una ambulancia inmediatamente sin evaluar la gravedad": {
              "resultado": "El servicio de emergencia se satura innecesariamente y el atleta solo necesitaba hielo.",
              "feedback": "Reaccionaste de manera excesiva sin validar la premisa. En programación, esto sería como detener un sistema completo por un error menor.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "El equipo pierde varios partidos seguidos y la moral está baja. ¿Qué debes hacer?",
          "elecciones": [
            "Analizar los errores en equipo y proponer un plan de mejora",
            "Culpar a los atletas por su mal rendimiento",
            "Cambiar completamente la estrategia sin consultar al equipo"
          ],
          "consecuencias": {
            "Analizar los errores en equipo y proponer un plan de mejora": {
              "resultado": "El equipo se une, identifica problemas y mejora en el siguiente partido.",
              "feedback": "Abordaste la premisa 'baja moral' con un enfoque colaborativo y lógico. En pensamiento lógico, trabajar en equipo para resolver problemas es más efectivo que culpar o imponer cambios.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Culpar a los atletas por su mal rendimiento": {
              "resultado": "La moral del equipo empeora y el rendimiento sigue bajando.",
              "feedback": "Enfocaste la atención en el problema, no en la solución. En lógica, culpar sin analizar causas no resuelve nada.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Cambiar completamente la estrategia sin consultar al equipo": {
              "resultado": "Los atletas se confunden y el equipo pierde otra vez.",
              "feedback": "Tomaste una decisión unilateral sin considerar las opiniones del equipo. En programación, esto sería como refactorizar código sin consultar a los demás desarrolladores.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un atleta estrella quiere dejar el equipo para unirse a la competencia. ¿Qué debes hacer?",
          "elecciones": [
            "Hablar con él para entender sus razones y ofrecerle incentivos para quedarse",
            "Aceptar su decisión y deseale suerte",
            "Amenazarlo con consecuencias si se va"
          ],
          "consecuencias": {
            "Hablar con él para entender sus razones y ofrecerle incentivos para quedarse": {
              "resultado": "El atleta reconsidera su decisión y se queda en el equipo.",
              "feedback": "Abordaste la premisa 'posible salida' con empatía y lógica, buscando una solución que beneficie a ambas partes. En pensamiento lógico, entender motivaciones es clave para resolver conflictos.",
              "puntuacion": 25,
              "final": true
            },
            "Aceptar su decisión y deseale suerte": {
              "resultado": "El atleta se va y el equipo pierde un jugador clave.",
              "feedback": "Aceptaste la premisa sin explorar alternativas. En lógica, siempre busca soluciones antes de resignarte a una pérdida.",
              "puntuacion": -5,
              "final": true
            },
            "Amenazarlo con consecuencias si se va": {
              "resultado": "El atleta se va igual y el ambiente en el equipo empeora.",
              "feedback": "Usaste un enfoque agresivo que no resolvió el problema. En programación, esto sería como forzar una solución con amenazas en lugar de diálogo.",
              "puntuacion": -20,
              "final": true
            }
          }
        }
      ]
    },
    {
      "id": 7,
      "titulo": "El Técnico de Computadoras",
      "enunciado": "Eres un técnico de computadoras y debes diagnosticar y resolver problemas en los equipos de tus clientes. Cada decisión afecta la satisfacción del cliente y la eficiencia de tu trabajo. Usa pensamiento lógico para identificar causas, optimizar recursos y ofrecer soluciones efectivas.",
      "preguntas": [
        {
          "pregunta": "Un cliente dice que su computadora está lenta. ¿Qué debes hacer primero?",
          "elecciones": [
            "Analizar los procesos en ejecución y el uso de recursos",
            "Reiniciar la computadora sin hacer más preguntas",
            "Decirle que compre una computadora nueva"
          ],
          "consecuencias": {
            "Analizar los procesos en ejecución y el uso de recursos": {
              "resultado": "Identificas un programa consumiendo mucha memoria y lo cierras, mejorando el rendimiento.",
              "feedback": "Seguiste un proceso lógico de diagnóstico según la premisa 'computadora lenta'. En pensamiento lógico, analizar las condiciones es el primer paso para resolver problemas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Reiniciar la computadora sin hacer más preguntas": {
              "resultado": "La computadora funciona mejor temporalmente, pero el problema persiste.",
              "feedback": "Ofreciste una solución rápida, pero no resolviste la causa raíz. En programación, esto sería como reiniciar un servicio sin investigar por qué falló.",
              "puntuacion": 5,
              "siguiente_ronda": true
            },
            "Decirle que compre una computadora nueva": {
              "resultado": "El cliente se molesta y busca otro técnico.",
              "feedback": "Ignoraste la posibilidad de resolver el problema con los recursos actuales. En lógica, siempre explora soluciones antes de descartar un sistema.",
              "puntuacion": -15,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente no puede conectarse a internet. ¿Qué debes hacer?",
          "elecciones": [
            "Verificar la conexión del router, cables y configuración de red",
            "Reiniciar la computadora",
            "Decirle que el problema es de su proveedor de internet"
          ],
          "consecuencias": {
            "Verificar la conexión del router, cables y configuración de red": {
              "resultado": "Encuentras un cable suelto, lo conectas y el internet funciona.",
              "feedback": "Seguiste un proceso lógico para diagnosticar la premisa 'sin internet'. En pensamiento lógico, verificar las condiciones físicas y de configuración es esencial.",
              "puntuacion": 15,
              "siguiente_ronda": true
            },
            "Reiniciar la computadora": {
              "resultado": "El problema persiste y el cliente se frustra.",
              "feedback": "Intentaste una solución genérica sin analizar la causa. En programación, esto sería como reiniciar un programa sin depurarlo.",
              "puntuacion": -5,
              "siguiente_ronda": true
            },
            "Decirle que el problema es de su proveedor de internet": {
              "resultado": "El cliente llama al proveedor, pero el problema era local.",
              "feedback": "Asumiste una causa sin validarla. En lógica, siempre verifica las premisas antes de concluir.",
              "puntuacion": -10,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente dice que su computadora hace ruidos extraños. ¿Qué debes hacer?",
          "elecciones": [
            "Abrir la computadora para revisar el ventilador y el disco duro",
            "Decirle que los ruidos son normales",
            "Formatear el disco duro sin revisar"
          ],
          "consecuencias": {
            "Abrir la computadora para revisar el ventilador y el disco duro": {
              "resultado": "Encuentras que el ventilador está obstruido, lo limpias y el ruido desaparece.",
              "feedback": "Investigaste la causa del ruido según la premisa 'ruidos extraños'. En pensamiento lógico, inspeccionar físicamente los componentes es clave para diagnosticar problemas de hardware.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decirle que los ruidos son normales": {
              "resultado": "El cliente ignora el problema y luego el disco duro falla.",
              "feedback": "Minimizaste un síntoma importante. En lógica, ignorar señales de alerta puede llevar a fallos críticos.",
              "puntuacion": -20,
              "siguiente_ronda": true
            },
            "Formatear el disco duro sin revisar": {
              "resultado": "El ruido persiste y el cliente pierde sus datos.",
              "feedback": "Tomaste una acción drástica sin diagnosticar. En programación, esto sería como borrar una base de datos sin hacer backup.",
              "puntuacion": -25,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente quiere recuperar archivos borrados accidentalmente. ¿Qué debes hacer?",
          "elecciones": [
            "Usar un software de recuperación de datos",
            "Decirle que los archivos se perdieron para siempre",
            "Intentar restaurar el sistema a un punto anterior"
          ],
          "consecuencias": {
            "Usar un software de recuperación de datos": {
              "resultado": "Recuperas la mayoría de los archivos y el cliente está agradecido.",
              "feedback": "Aplicaste una solución técnica según la premisa 'archivos borrados'. En pensamiento lógico, usar herramientas adecuadas para cada problema es esencial.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decirle que los archivos se perdieron para siempre": {
              "resultado": "El cliente se frustra y busca otro técnico.",
              "feedback": "No exploraste alternativas para recuperar los datos. En lógica, siempre busca soluciones antes de declarar algo como imposible.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Intentar restaurar el sistema a un punto anterior": {
              "resultado": "El sistema se restaura, pero algunos programas dejan de funcionar.",
              "feedback": "Ofreciste una solución, pero con efectos secundarios. En programación, esto sería como hacer un rollback sin probar las consecuencias.",
              "puntuacion": 5,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente dice que su computadora se apaga sola. ¿Qué debes hacer?",
          "elecciones": [
            "Revisar la temperatura, la fuente de poder y posibles virus",
            "Decirle que es un problema de hardware sin revisar",
            "Formatear la computadora sin diagnosticar"
          ],
          "consecuencias": {
            "Revisar la temperatura, la fuente de poder y posibles virus": {
              "resultado": "Encuentras que el ventilador no funciona y lo reparas, resolviendo el problema.",
              "feedback": "Seguiste un proceso lógico para diagnosticar la premisa 'apagados aleatorios'. En pensamiento lógico, verificar múltiples causas posibles es esencial para resolver problemas complejos.",
              "puntuacion": 25,
              "siguiente_ronda": true
            },
            "Decirle que es un problema de hardware sin revisar": {
              "resultado": "El cliente gasta dinero en una fuente de poder nueva innecesariamente.",
              "feedback": "Asumiste una causa sin validarla. En lógica, siempre verifica las premisas antes de concluir.",
              "puntuacion": -15,
              "siguiente_ronda": true
            },
            "Formatear la computadora sin diagnosticar": {
              "resultado": "El problema persiste y el cliente pierde sus datos.",
              "feedback": "Tomaste una acción drástica sin entender la causa. En programación, esto sería como reinstalar un sistema sin saber qué falló.",
              "puntuacion": -20,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente quiere actualizar su computadora, pero tiene hardware antiguo. ¿Qué debes hacer?",
          "elecciones": [
            "Recomendarle actualizar solo los componentes compatibles",
            "Decirle que compre una computadora nueva",
            "Intentar instalar el nuevo sistema operativo igual"
          ],
          "consecuencias": {
            "Recomendarle actualizar solo los componentes compatibles": {
              "resultado": "El cliente actualiza su equipo sin problemas y queda satisfecho.",
              "feedback": "Adaptaste la solución a las premisas 'hardware antiguo'. En pensamiento lógico, trabajar dentro de las limitaciones existentes es clave para evitar problemas.",
              "puntuacion": 20,
              "siguiente_ronda": true
            },
            "Decirle que compre una computadora nueva": {
              "resultado": "El cliente se molesta por no explorar alternativas más económicas.",
              "feedback": "No consideraste la posibilidad de optimizar los recursos actuales. En lógica, siempre busca soluciones antes de descartar un sistema.",
              "puntuacion": -10,
              "siguiente_ronda": true
            },
            "Intentar instalar el nuevo sistema operativo igual": {
              "resultado": "La computadora queda inutilizable y el cliente pierde sus datos.",
              "feedback": "Ignoraste las limitaciones del hardware. En programación, esto sería como forzar una actualización sin verificar compatibilidad.",
              "puntuacion": -25,
              "siguiente_ronda": true
            }
          }
        },
        {
          "pregunta": "Un cliente trae una computadora con virus y quiere que la repares. ¿Qué debes hacer?",
          "elecciones": [
            "Hacer un escaneo completo con antivirus y limpiar los archivos infectados",
            "Formatear la computadora sin intentar limpiarla",
            "Decirle que compre una computadora nueva porque la suya está infectada"
          ],
          "consecuencias": {
            "Hacer un escaneo completo con antivirus y limpiar los archivos infectados": {
              "resultado": "La computadora queda limpia y funcional, y el cliente está agradecido.",
              "feedback": "Seguiste un proceso lógico para resolver la premisa 'computadora con virus'. En pensamiento lógico, intentar soluciones menos invasivas primero es una buena práctica.",
              "puntuacion": 20,
              "final": true
            },
            "Formatear la computadora sin intentar limpiarla": {
              "resultado": "La computadora queda limpia, pero el cliente pierde sus archivos importantes.",
              "feedback": "Tomaste una acción drástica sin explorar alternativas. En programación, esto sería como borrar todo sin intentar una recuperación.",
              "puntuacion": -10,
              "final": true
            },
            "Decirle que compre una computadora nueva porque la suya está infectada": {
              "resultado": "El cliente se molesta y busca otro técnico.",
              "feedback": "No exploraste la posibilidad de reparar la computadora actual. En lógica, siempre busca soluciones antes de recomendar un reemplazo total.",
              "puntuacion": -20,
              "final": true
            }
          }
        }
      ]
    }
  ]
}
